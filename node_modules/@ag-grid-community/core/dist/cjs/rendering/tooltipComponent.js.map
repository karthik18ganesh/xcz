{"version":3,"sources":["../../src/ts/rendering/tooltipComponent.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,4DAA2D;AAE3D,0CAA+C;AAwB/C;IAAsC,oCAAc;IAChD;eACI,kBAAM,UAAU,CAAA,kCAAgC,CAAC;IACrD,CAAC;IAED,2BAA2B;IACpB,+BAAI,GAAX,UAAY,MAAsB;QACtB,IAAA,oBAAK,CAAY;QACzB,IAAI,CAAC,MAAM,EAAE,CAAC,SAAS,GAAG,qBAAY,CAAC,KAAK,CAAW,CAAC;IAC5D,CAAC;IACL,uBAAC;AAAD,CAVA,AAUC,CAVqC,+BAAc,GAUnD;AAVY,4CAAgB","file":"tooltipComponent.js","sourcesContent":["import { PopupComponent } from '../widgets/popupComponent';\nimport { IComponent } from '../interfaces/iComponent';\nimport { escapeString } from '../utils/string';\nimport { GridApi } from '../gridApi';\nimport { ColumnApi } from '../columns/columnApi';\nimport { RowNode } from '../entities/rowNode';\nimport { Column } from '../entities/column';\nimport { ColumnGroup } from '../entities/columnGroup';\nimport { ColGroupDef, ColDef } from '../entities/colDef';\n\nexport interface ITooltipParams {\n    location: string;\n    api?: GridApi;\n    columnApi?: ColumnApi;\n    context?: any;\n    colDef?: ColDef | ColGroupDef | null;\n    column?: Column | ColumnGroup;\n    value?: any;\n    valueFormatted?: any;\n    rowIndex?: number;\n    node?: RowNode;\n    data?: any;\n}\n\nexport interface ITooltipComp extends IComponent<ITooltipParams> { }\n\nexport class TooltipComponent extends PopupComponent implements ITooltipComp {\n    constructor() {\n        super(/* html */`<div class=\"ag-tooltip\"></div>`);\n    }\n\n    // will need to type params\n    public init(params: ITooltipParams): void {\n        const { value } = params;\n        this.getGui().innerHTML = escapeString(value) as string;\n    }\n}\n"]}