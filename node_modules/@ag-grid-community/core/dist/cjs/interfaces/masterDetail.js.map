{"version":3,"sources":["../../src/ts/interfaces/masterDetail.ts"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA","file":"masterDetail.js","sourcesContent":["import { GridOptions } from \"../entities/gridOptions\";\nimport { ICellRendererParams } from \"../rendering/cellRenderers/iCellRenderer\";\nimport { RowNode } from \"../entities/rowNode\";\nimport { GridApi } from \"../gridApi\";\nimport { ColumnApi } from \"../columns/columnApi\";\n\nexport interface IDetailCellRenderer {\n    addOrRemoveCssClass(cssClassName: string, on: boolean): void;\n    addOrRemoveDetailGridCssClass(cssClassName: string, on: boolean): void;\n    setDetailGrid(gridOptions: GridOptions): void;\n    setRowData(rowData: any[]): void;\n}\n\nexport interface IDetailCellRendererParams extends ICellRendererParams {\n    detailGridOptions: GridOptions;\n    getDetailRowData: GetDetailRowData;\n    refreshStrategy: 'rows' | 'everything' | 'nothing';\n    agGridReact: any;\n    frameworkComponentWrapper: any;\n    $compile: any;\n    pinned: string;\n    template: string | TemplateFunc;\n    /** @deprecated */\n    autoHeight: boolean;\n    /** @deprecated */\n    suppressRefresh: boolean;\n}\n\nexport interface GetDetailRowData {\n    (params: GetDetailRowDataParams): void;\n}\n\nexport interface GetDetailRowDataParams {\n    // details for the request,\n    node: RowNode;\n    data: any;\n\n    // success callback, pass the rows back the grid asked for\n    successCallback(rowData: any[]): void;\n}\n\ninterface TemplateFunc {\n    (params: ICellRendererParams): string;\n}\n\nexport interface IDetailCellRendererCtrl {\n    init(comp: IDetailCellRenderer, params: IDetailCellRendererParams): void;\n    registerDetailWithMaster(api: GridApi, columnApi: ColumnApi): void;\n    refresh(): boolean;\n}\n"]}