{"remainingRequest":"C:\\Users\\18kar\\Desktop\\FE bugs\\shan\\front_end\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18kar\\Desktop\\FE bugs\\shan\\front_end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\18kar\\Desktop\\FE bugs\\shan\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\18kar\\Desktop\\FE bugs\\shan\\front_end\\src\\components\\TaggingDisplay.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\18kar\\Desktop\\FE bugs\\shan\\front_end\\src\\components\\TaggingDisplay.vue","mtime":1634833776187},{"path":"C:\\Users\\18kar\\Desktop\\FE bugs\\shan\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\18kar\\Desktop\\FE bugs\\shan\\front_end\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\18kar\\Desktop\\FE bugs\\shan\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\18kar\\Desktop\\FE bugs\\shan\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["TaggingDisplay.vue"],"names":[],"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","sourcesContent":["<template>\r\n  <v-container style=\"display: block\" fluid class=\"whhite darken-5\">\r\n    <v-row class=\"companyHeader companyHeaderNew\">\r\n      <v-col cols=\"3\" style=\"padding: 0px\">\r\n        <p\r\n          style=\"\r\n            margin-bottom: 0px;\r\n            width: 100%;\r\n            font-size: 14px;\r\n            text-align: start;margin-left: 14px;\r\n          \"\r\n        >\r\n          {{fina?fina[\"company_name\"]:''}}\r\n          <span\r\n            style=\"\r\n              padding: 0px 5px;\r\n              font-weight: 600;\r\n              font-size: 14px;\r\n              color: #828282bd;\r\n            \"\r\n          >\r\n            <v-icon color=\"#676767\" style=\"font-size: 14px\" dark>mdi-chevron-right</v-icon>\r\n          </span>\r\n          Tagging\r\n        </p>\r\n      </v-col>\r\n      <v-col\r\n        cols=\"6\"\r\n        style=\"\r\n          padding-bottom: 0px;\r\n          padding-top: 0px;\r\n          font-size: 14px;\r\n          font-weight: 600;\r\n        \"\r\n      >\r\n        <p style=\"margin-bottom: 0px\">\r\n          {{ totaltaggedLedger }} of {{ totalLedger }} Ledgers Successfully\r\n          Autotagged\r\n        </p>\r\n      </v-col>\r\n      <!-- <v-col cols=\"3\" style=\"height:30px;padding-bottom:0px;padding-top:0px\">\r\n          <v-select\r\n          height=\"20\"\r\n          style=\"width:50%;\"\r\n        dense\r\n        label=\"Export\"\r\n       outlined\r\n        v-model=\"selectedImportLevel\"\r\n     :items=\"['PDF','Tally']\"                 \r\n                     \r\n   \r\n  ></v-select>\r\n    </v-col> -->\r\n      <v-col\r\n        cols=\"3\"\r\n        style=\"\r\n          height: 20px;\r\n          padding-bottom: 0px;\r\n          padding-top: 0px;\r\n          padding-right: 0px;\r\n          margin-top: -10px;\r\n          justify-content: flex-end;\r\n          display: flex;\r\n        \"\r\n      >\r\n        <v-menu bottom offset-y=\"true\">\r\n          <template v-slot:activator=\"{ on }\">\r\n            <v-btn\r\n              class=\"textColor\"\r\n              style=\"\r\n                border: 0.5px solid #c7c6c6;\r\n                box-sizing: border-box;\r\n                border-radius: 4px;\r\n                max-height: 30px;\r\n                min-width: 95px;\r\n                max-width: 95px;\r\n                background-color: #0000;\r\n                box-shadow: none;\r\n                font-size: 14px;\r\n                text-transform: capitalize;\r\n              \"\r\n              dark\r\n              v-on=\"on\"\r\n            >\r\n              &nbsp; Export &nbsp;\r\n              <v-icon color=\"grey\" style=\"font-size: 20px\" dark\r\n                >mdi-chevron-down</v-icon\r\n              >\r\n              &nbsp;\r\n            </v-btn>\r\n          </template>\r\n\r\n          <v-list>\r\n            <v-list-item\r\n              v-for=\"(item, index) in [{ title: 'Excel' }, { title: 'PDF' }]\"\r\n              :key=\"index\"\r\n              @click=\"() => handleExport(index)\"\r\n            >\r\n              <v-list-item-title>{{ item.title }}</v-list-item-title>\r\n            </v-list-item>\r\n          </v-list>\r\n        </v-menu>\r\n      </v-col>\r\n    </v-row>\r\n\r\n    <hr\r\n      style=\"\r\n        margin-top: 10px;\r\n        margin-left: -13px;\r\n        width: 103%;\r\n        margin-bottom: 10px;\r\n      \"\r\n    />\r\n<v-dialog v-model=\"editLedger\" content-class=\"editDialogStyle\" width=\"25vw\" >\r\n      <v-card style=\"width:100%;height:100%\">\r\n    <v-card-title class=\"text-h5 white darken-2\">\r\n          <div>\r\n            <v-row>\r\n              <v-col cols=\"12\">\r\n                <h5\r\n                  class=\"headingPopup header\"\r\n                  style=\"color: #03a9f4; font-size: 20px\"\r\n                >\r\n                  Edit Ledgers\r\n                </h5>\r\n              </v-col>\r\n            </v-row>\r\n          </div>\r\n        </v-card-title>\r\n        <hr class=\"alertDivider\" />\r\n        <v-card-text style=\"height:70%;\">\r\n        <v-row>\r\n          <v-text-field autocomplete=\"off\" \r\n            v-model=\"editLedgerName.oldValue\"\r\n            label=\"Old Ledger Name\"\r\n            disabled\r\n            style=\"margin-top:16px\"\r\n            outlined\r\n            hide-details\r\n          ></v-text-field>\r\n        </v-row>\r\n        <v-row>\r\n          <v-text-field autocomplete=\"off\" \r\n            v-model=\"editLedgerName.newValue\"\r\n            label=\"New Ledger Name\"\r\n            style=\"margin-top:27px\"\r\n            outlined\r\n            hide-details\r\n          ></v-text-field>\r\n        </v-row>\r\n        </v-card-text>\r\n        <v-card-actions class=\"actionStyle\">\r\n          <v-btn\r\n            class=\"ma-2\"\r\n            style=\"\r\n              padding: 2px 0px;width:30%;\r\n              background-color: #03a9f4 !important;\r\n              color: white;\r\n            \"\r\n            color=\"#03a9f4\"\r\n            @click=\"updateLedgerName\"\r\n          >\r\n            Update\r\n          </v-btn>\r\n          <v-btn\r\n            class=\"ma-2\"\r\n            style=\"\r\n              padding: 2px 0px;width:30%;\r\n              background-color: #03a9f4 !important;\r\n              color: white;\r\n            \"\r\n            color=\"#03a9f4\"\r\n            @click=\"closeEditDialog\"\r\n          >\r\n            Close\r\n          </v-btn>\r\n        </v-card-actions>\r\n    </v-card>\r\n</v-dialog>\r\n    <v-dialog v-model=\"bulkTagLevel1Enabled\" v-bind:width=\"dialogWidth\">\r\n      <v-card>\r\n        <v-card-title class=\"text-h5 white darken-2\">\r\n          <div>\r\n            <v-row>\r\n              <v-col cols=\"12\">\r\n                <h5\r\n                  class=\"headingPopup\"\r\n                  style=\"color: #03a9f4; font-size: 20px\"\r\n                >\r\n                  {{ isDialogMode == 1 ? \"Info\" : \"Bulk Tagging\" }}\r\n                </h5>\r\n              </v-col>\r\n            </v-row>\r\n          </div>\r\n        </v-card-title>\r\n        <hr class=\"alertDivider\" />\r\n\r\n        <v-card-text\r\n          v-bind:class=\"{\r\n            alertStyle: isDialogMode === 1,\r\n            bluk1Dia: isDialogMode != 1,\r\n          }\"\r\n        >\r\n          <v-form novalidate=\"true\" ref=\"tallyForm\">\r\n            <v-row no-gutters>\r\n              <v-col cols=\"12\" v-if=\"isDialogMode == 1\">\r\n                <p style=\"font-size: 16px; margin: 0px\">{{ alertMeassage }}</p>\r\n              </v-col>\r\n              <v-col\r\n                cols=\"12\"\r\n                v-if=\"isDialogMode == 2\"\r\n                style=\"display: flex; justify-content: center\"\r\n              >\r\n                <v-autocomplete\r\n                  style=\"max-width: 75%\"\r\n                  hide-details\r\n                  single-line\r\n                  v-model=\"dialogL1Value\"\r\n                  :items=\"l1Options\"\r\n                  outlined\r\n                  dense\r\n                  @change=\"ledgerDialogl1Changed\"\r\n                  item-text=\"name\"\r\n                  item-value=\"name\"\r\n                  placeholder=\"Level One- Tagging List\"\r\n                >\r\n                  <template v-slot:selection=\"data\">\r\n                    {{ data.item.name }}\r\n                  </template>\r\n                  <template v-slot:item=\"data\">\r\n                    {{ data.item.name }}\r\n                  </template>\r\n                </v-autocomplete>\r\n              </v-col>\r\n\r\n              <v-col\r\n                v-if=\"isDialogMode == 3\"\r\n                style=\"display: flex; justify-content: center; width: 50%\"\r\n              >\r\n                <v-autocomplete\r\n                  style=\"max-width: 75%\"\r\n                  hide-details\r\n                  single-line\r\n                  v-model=\"dialogL1Value\"\r\n                  :items=\"l1Options\"\r\n                  outlined\r\n                  dense\r\n                  @change=\"ledgerDialogl1Changed\"\r\n                  item-text=\"name\"\r\n                  item-value=\"name\"\r\n                  placeholder=\"Level One- Tagging List\"\r\n                >\r\n                  <template v-slot:selection=\"data\">\r\n                    {{ data.item.name }}\r\n                  </template>\r\n                  <template v-slot:item=\"data\">\r\n                    {{ data.item.name }}\r\n                  </template>\r\n                </v-autocomplete>\r\n              </v-col>\r\n              <v-col\r\n                v-if=\"isDialogMode == 3\"\r\n                style=\"display: flex; justify-content: center; width: 50%\"\r\n              >\r\n                <v-autocomplete\r\n                  style=\"max-width: 75%\"\r\n                  hide-details\r\n                  single-line\r\n                  v-model=\"dialogL2Value\"\r\n                  :items=\"l2\"\r\n                  outlined\r\n                  dense\r\n                  placeholder=\"Level Two- Tagging List\"\r\n                  @change=\"ledgerDialogl2Changed\"\r\n                  item-text=\"name\"\r\n                  item-value=\"name\"\r\n                >\r\n                  <template v-slot:selection=\"data\">\r\n                    {{ data.item.name }}\r\n                  </template>\r\n                  <template v-slot:item=\"data\">\r\n                    {{ data.item.name }}\r\n                  </template>\r\n                </v-autocomplete>\r\n              </v-col>\r\n            </v-row>\r\n          </v-form>\r\n        </v-card-text>\r\n        <v-card-actions class=\"actionStyle\">\r\n          <v-btn\r\n            v-if=\"isDialogMode == 1 && !isDiffBulck\"\r\n            class=\"ma-2\"\r\n            color=\"#03a9f4\"\r\n            style=\"\r\n              padding-top: 2px;\r\n              background-color: #03a9f4 !important;\r\n              color: white;\r\n            \"\r\n            @click=\"closeDialog\"\r\n          >\r\n            Ok\r\n          </v-btn>\r\n          <v-btn\r\n            v-if=\"isDialogMode == 1 && isDiffBulck\"\r\n            class=\"ma-2\"\r\n            color=\"#03a9f4\"\r\n            style=\"\r\n              padding-top: 2px;\r\n              background-color: #03a9f4 !important;\r\n              color: white;\r\n            \"\r\n            @click=\"() => bulkTagLevel(3)\"\r\n          >\r\n            Yes\r\n          </v-btn>\r\n          <v-btn\r\n            v-if=\"isDialogMode == 1 && isDiffBulck\"\r\n            class=\"ma-2\"\r\n            color=\"#03a9f4\"\r\n            style=\"\r\n              padding-top: 2px;\r\n              background-color: #03a9f4 !important;\r\n              color: white;\r\n            \"\r\n            @click=\"closeDialog\"\r\n          >\r\n            No\r\n          </v-btn>\r\n          <v-btn\r\n            v-if=\"isDialogMode != 1\"\r\n            class=\"ma-2\"\r\n            style=\"\r\n              padding-top: 2px;\r\n              background-color: #03a9f4 !important;\r\n              color: white;\r\n            \"\r\n            color=\"#03a9f4\"\r\n            :disabled=\"\r\n              isDialogMode == 3\r\n                ? !dialogL2Value || !dialogL1Value\r\n                : !dialogL1Value\r\n            \"\r\n            @click=\"applyLevel1BulkTags\"\r\n          >\r\n            Apply All\r\n          </v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n\r\n    <v-row style=\"justify-content: space-between\">\r\n      <v-col\r\n        cols=\"5\"\r\n        style=\"\r\n          padding: 0px;\r\n          height: 40px;\r\n          display: flex;\r\n          align-items: center;\r\n          margin-left: 23px;\r\n        \"\r\n      >\r\n        <v-col style=\"max-width: 6vw; padding: 0px\">\r\n          <p style=\"font-size: 14px\" class=\"ma-1\">Tagging &nbsp; :</p>\r\n        </v-col>\r\n        <v-col cols=\"2\" style=\"padding: 0px\">\r\n          <v-menu offset-y bottom>\r\n            <template v-slot:activator=\"{ on }\">\r\n              <v-btn\r\n                dark\r\n                v-on=\"on\"\r\n                class=\"noHover\"\r\n                style=\"\r\n                  height: auto !important;\r\n                  background-color: #fff;\r\n                  box-shadow: none;\r\n                  font-size: 14px;\r\n                  padding: 0px;\r\n                  color: #494949;\r\n                  text-transform: capitalize;\r\n                \"\r\n              >\r\n                {{ selectedImportLevel }}\r\n                <v-icon dark color=\"grey\" style=\"font-size: 20px\"\r\n                  >mdi-chevron-down</v-icon\r\n                >\r\n              </v-btn>\r\n            </template>\r\n            <v-list\r\n              style=\"\r\n                display: flex;\r\n                flex-direction: column;\r\n                padding: 10px;\r\n                text-align: start;\r\n              \"\r\n            >\r\n              <v-list-tile\r\n                style=\"padding: 3px; cursor: pointer; font-size: 14px\"\r\n                class=\"onHover\"\r\n                v-for=\"(item, index) in [\r\n                  { title: 'Closing Balance' },\r\n                  { title: 'Opening Balance' },\r\n                ]\"\r\n                :key=\"index\"\r\n                @click=\"preventTypeChange\"\r\n              >\r\n                <v-list-tile-title>{{ item.title }}</v-list-tile-title>\r\n              </v-list-tile>\r\n            </v-list>\r\n          </v-menu>\r\n        </v-col>\r\n      </v-col>\r\n      <v-col\r\n        cols=\"6\"\r\n        style=\"\r\n          padding: 0px;\r\n          height: 40px;\r\n          display: flex;\r\n          justify-content: end;\r\n          padding-right: 16.5px;\r\n        \"\r\n      >\r\n      <v-col cols=\"2\" style=\"padding: 0px;display: flex;justify-content: end;\" v-if=\"selectedImportLevel == 'Closing Balance'\">\r\n        <aeComponent @aeSuccessCallback=\"aeSuccessCallback\" @aeFailedCallback=\"aeFailedCallback\"/>        \r\n      </v-col>\r\n        <v-col cols=\"4\" style=\"padding: 0px\">\r\n          <v-chip-group @change=\"viewChange\" mandatory>\r\n            <v-chip :value=\"true\">Groups</v-chip>\r\n            <v-chip :value=\"false\">Ledgers</v-chip>\r\n          </v-chip-group>\r\n        </v-col>\r\n        <v-col\r\n          cols=\"5\"\r\n          style=\"padding: 0px; display: flex; align-items: flex-end\"\r\n          class=\"searchStyleP\"\r\n        >\r\n          <v-text-field autocomplete=\"off\" \r\n            height=\"30px\"\r\n            class=\"searchStyle\"\r\n            hide-details\r\n            append-icon=\"mdi-magnify\"\r\n            @input=\"filterTableByledger\"\r\n            id=\"filter-input\"\r\n            placeholder=\"Search here\"\r\n            outlined\r\n            dense\r\n          ></v-text-field>\r\n        </v-col>\r\n      </v-col>\r\n    </v-row>\r\n\r\n\r\n    <v-row style=\"margin-top: 20px; display: flex; justify-content: center\">\r\n    <v-card v-bind:class=\"{ledgerViweTbHg:!groupingSelected}\" class=\"cardStyle\" style=\"min-height: 60vh; margin: 6px; width:97.5%\">\r\n    <ag-grid-vue \r\n    style=\"width: 100%; height: 100%;\"\r\n                class=\"ag-theme-material\"\r\n                id=\"myGrid\"\r\n        :columnDefs=\"columnDefs\"\r\n        :rowData=\"rowData\"\r\n        :context=\"context\"\r\n        @grid-ready=\"onGridReady\"\r\n        :defaultColDef=\"defaultColDef\"\r\n        :getRowNodeId= \"getRowNodeId\"\r\n        :pagination=\"false\"> \r\n    </ag-grid-vue>  \r\n    </v-card>\r\n</v-row>\r\n\r\n    <v-row\r\n      style=\"margin-top: 0px\"\r\n      v-if=\"isParentValidCheck && groupingSelected\"\r\n    >\r\n      <v-col style=\"max-width: 7%; padding-bottom: 0px\"></v-col>\r\n      <v-col\r\n        style=\"max-width: 15%; min-width: 15%; padding-bottom: 0px\"\r\n        v-for=\"(item, index) in parentDisplayValues\"\r\n        :key=\"index\"\r\n      >\r\n        <span>\r\n          <v-icon\r\n            color=\"#18B745\"\r\n            style=\"font-size: 20px; display: none\"\r\n            dark\r\n            v-bind:class=\"{\r\n              displayValid: parentDisplayErrors.indexOf(item) == -1,\r\n            }\"\r\n            >mdi-check-circle-outline</v-icon\r\n          >\r\n        </span>\r\n        <span>\r\n          <v-icon\r\n            color=\"#FF9537\"\r\n            style=\"font-size: 20px; display: none\"\r\n            v-bind:class=\"{\r\n              displayValid: parentDisplayErrors.indexOf(item) != -1,\r\n            }\"\r\n            dark\r\n            >mdi-close-circle-outline</v-icon\r\n          >\r\n        </span>\r\n      </v-col>\r\n    </v-row>\r\n    <v-row style=\"margin-top: 20px; margin-bottom: 0px\" v-if=\"groupingSelected\">\r\n      <v-col style=\"max-width:7%;height30px;padding:0px\">\r\n        <span>\r\n          <v-icon\r\n            color=\"grey\"\r\n            style=\"font-size: 25px!important\"\r\n            @click=\"moveParent(1)\"\r\n            v-bind:class=\"{\r\n              cursorPointer:\r\n                possibleParents[0] &&\r\n                possibleParents[0].name != parentDisplayValues[0],\r\n            }\"\r\n            :disabled=\"\r\n              (possibleParents[0] &&\r\n                possibleParents[0].name == parentDisplayValues[0]) ||\r\n              (changedPossinleParents[0] &&\r\n                changedPossinleParents[0].name == parentDisplayValues[0])\r\n            \"\r\n            dark\r\n            >mdi-menu-left</v-icon\r\n          >\r\n        </span>\r\n        <span>\r\n          <v-icon\r\n            color=\"grey\"\r\n            style=\"font-size: 25px !important\"\r\n            @click=\"moveParent(2)\"\r\n            v-bind:class=\"{\r\n              cursorPointer:\r\n                possibleParents[possibleParents.length - 1] &&\r\n                possibleParents[possibleParents.length - 1].name ==\r\n                  parentDisplayValues[4],\r\n            }\"\r\n            :disabled=\"\r\n              (possibleParents[possibleParents.length - 1] &&\r\n                possibleParents[possibleParents.length - 1].name ==\r\n                  parentDisplayValues[4]) ||\r\n              (changedPossinleParents[changedPossinleParents.length - 1] &&\r\n                changedPossinleParents[changedPossinleParents.length - 1]\r\n                  .name == parentDisplayValues[4])\r\n            \"\r\n            dark\r\n            >mdi-menu-right</v-icon\r\n          >\r\n        </span>\r\n      </v-col>\r\n      <v-col\r\n        style=\"padding: 2.5px;display:flex;align-items:center;justify-content:center;text-transform: capitalize;max-width:15%;min-width:15%;border: 1px solid #d3d3d3;height30px;cursor: pointer;\"\r\n        v-for=\"(item, index) in parentDisplayValues\"\r\n        v-bind:class=\"{ selectBackgroundStyle: item == selectedParent }\"\r\n        :key=\"index\"\r\n        @click=\"handleSelectParent(index)\"\r\n        >{{ item }}</v-col\r\n      >\r\n      <v-col style=\"max-width:10%;height30px;padding:0px\"\r\n        >{{ possibleParents.length - parentDisplayValues.length }} more\r\n      </v-col>\r\n    </v-row>\r\n\r\n    <v-row\r\n      style=\"margin-top: 15px\"\r\n      v-bind:class=\"{ saveMargin: isParentValidCheck && groupingSelected }\"\r\n    >\r\n      <v-col cols=\"12\" style=\"padding: 0px\">\r\n        <v-btn\r\n          color=\"#03a9f4\"\r\n          style=\"color: white; height: 25px !important; margin-right: 20px\"\r\n          @click=\"saveAllLedgers\"\r\n        >\r\n          Save\r\n        </v-btn>\r\n        <v-btn\r\n          style=\"color: white; height: 25px !important\"\r\n          color=\"#03a9f4\"\r\n          @click=\"validateLedgers\"\r\n        >\r\n          Validate\r\n        </v-btn>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n<script>\r\nimport store from '../store'\r\n// import { debounce } from \"debounce\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nvar numeral = require(\"numeral\");\r\nimport Vue from \"vue\";\r\nVue.filter(\"formatNumber\", function (value) {\r\n  return numeral(value).format(\"0,0\"); // displaying other groupings/separators is possible, look at the docs\r\n});\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-material.css\";\r\n// import DropdownCellRenderer from \"./dropdownCellRenderer\"\r\nimport L1Component from \"./taggingL1Component.vue\";import L1HederComponent from \"./taggingL1HeaderComponent.vue\";\r\nimport L2Component from \"./taggingL2Component.vue\";import L2HederComponent from \"./taggingL2HeaderComponent.vue\";\r\nimport L3Component from \"./taggingL3Component.vue\";import L3HederComponent from \"./taggingL3HeaderComponent.vue\";\r\nimport NameComponent from \"./taggingNameComponent.vue\";import NameHederComponent from \"./taggingNameHeaderComponent.vue\";\r\nimport AcitionComponent from \"./taggingActionComponent.vue\";import DrCrComponent from \"./taggingDrCrComponent.vue\";\r\nimport AeComponent from \"./AeComponent.vue\";\r\nimport SelectionComponent from \"./taggingSelectionComponent.vue\";\r\nimport {AgGridVue} from 'ag-grid-vue';\r\nexport default {\r\n  name: \"TaggingHome\",\r\n  components:{\r\n    /* eslint-disable vue/no-unused-components */\r\n    'ag-grid-vue':AgGridVue,'l1HederComponent':L1HederComponent,'l2HederComponent':L2HederComponent,'l3HederComponent':L3HederComponent,\r\n    'l1Component':L1Component,\"l2Component\":L2Component,\"l3Component\":L3Component,\"nameComponent\":NameComponent,\"nameHederComponent\":NameHederComponent,\r\n    \"acitionComponent\":AcitionComponent,\"drCrComponent\":DrCrComponent,\"selectionComponent\":SelectionComponent,\"aeComponent\":AeComponent\r\n  }, \r\n  beforeMount() {        \r\n    this.columnDefs=JSON.parse(JSON.stringify(this.allColumnDefs));\r\n    },\r\n  data() {\r\n    return {\r\n      constantlyChecking:null,\r\n      editLedgerName:{oldValue:\"\",newValue:\"\"},\r\n      editLedger:false,\r\n      isParentDetailsAvailable:[],\r\n      isAllDataGot:false,\r\n      gridApi: null,\r\n            columnApi: null,\r\n            defaultColDef: {\r\n                editable: false,\r\n                sortable: false,\r\n                flex: 1,\r\n                filter: false,\r\n                resizable: true,\r\n            },\r\n            context: {\r\n          componentParent: this\r\n        },\r\n      columnDefs: [],\r\n      allColumnDefs:[\r\n    {\r\n      headerName: \"ACTION\",\r\n      field: \"action\",\r\n      cellRenderer: \"acitionComponent\",\r\n      maxWidth: 110\r\n    },\r\n\r\n    {\r\n      field: \"name\",\r\n      cellRenderer: \"nameComponent\",\r\n      headerComponent:\"nameHederComponent\",\r\n      resizable: true,\r\n    },\r\n    {\r\n      headerName: \"AMOUNT\",\r\n      field: \"balance\",\r\n      maxWidth: 150\r\n    },\r\n    {\r\n      headerName: \"Dr/Cr\",\r\n      field: \"drcr\",\r\n      cellRenderer: \"drCrComponent\",\r\n      maxWidth: 100\r\n    },\r\n    {\r\n      headerName: \"SELECTION\",\r\n      field: \"selection\",\r\n      cellRenderer: \"selectionComponent\",\r\n      maxWidth: 140\r\n    },\r\n    {\r\n      headerName: \"Level 1\",\r\n      field: \"level1\",\r\n      cellRenderer: \"l1Component\",\r\n      headerComponent:\"l1HederComponent\",\r\n      hide:false,\r\n      maxWidth: 350\r\n    },\r\n    {\r\n      headerName: \"Level 2\",\r\n      field: \"level2\",\r\n      cellRenderer: \"l2Component\",\r\n      headerComponent:\"l2HederComponent\",\r\n      hide:false,\r\n      maxWidth: 350\r\n    },{\r\n      headerName: \"Level 3\",\r\n      field: \"level3\",\r\n      cellRenderer: \"l3Component\",\r\n      headerComponent:\"l3HederComponent\",\r\n      hide:true,\r\n      maxWidth: 350\r\n    }\r\n  ],\r\n      rowData: null,\r\n      changedPossinleParents: [],\r\n      tableHeight: \"61.8vh\",\r\n      l1FilterOption: [],\r\n      parentChecked: {},\r\n      childChecked: {},\r\n      parentDisplayErrors: [],\r\n      parentDisplayValues: [],\r\n      isParentValidCheck: false,\r\n      selectedParent: \"\",\r\n      isHeadergroupOpen: true,\r\n      isRowGroupOpen: [],\r\n      isCollapsedParent: [],\r\n      level1filter: null,\r\n      level2filter: null,\r\n      level3filter: null,\r\n      unSavedValue: [],\r\n      totalLedger: 0,\r\n      totaltaggedLedger: 0,\r\n      excelArray: [],\r\n      dialogL1Value: \"\",\r\n      dialogL2Value: \"\",\r\n      alertMeassage: \"\",\r\n      isDiffBulck: false,\r\n      dialogWidth: \"70vw\",\r\n      isDialogMode: 1,\r\n      level2BulkValues: [],\r\n      bulkTagLevel2Enabled: false,\r\n      bulkTagLevel1Enabled: false,\r\n      bulkTagSelectedLevel2: \"\",\r\n      level1Names: [],\r\n      checkbox: false,\r\n      timeout: null,\r\n      l1: [],\r\n      l2: [],\r\n      l3: [],\r\n      l1Value: [],\r\n      date: \"\",\r\n      filterOn: [],\r\n      selectedGroup: \"\",\r\n      groupingSelected: true,\r\n      tableFilter: \"\",\r\n      selectedAllItems: false,\r\n      showLevel1: true,\r\n      showLevel2: true,\r\n      showLevel3: false,\r\n      tabSelection: 0,\r\n      possibleParents: [],\r\n      selectedImportLevel: \"Closing Balance\",\r\n      tempSelect: [],\r\n      templevel1Arryay: [],\r\n      templevel2Arryay: [],\r\n      templevel3Arryay: [],\r\n      tempTreelevel1Arryay: [],\r\n      tempTreelevel2Arryay: [],\r\n      tempTreelevel3Arryay: [],\r\n\r\n      selectedYear: \"Current Year\",\r\n      selectedCompany: \"VKC\",\r\n      showXMLDialogue: false,\r\n\r\n      dataImported: false,\r\n      tagSelected: false,\r\n      selectedTag: \"\",\r\n      fields: [\r\n        {\r\n          key: \"action\",\r\n          sortable: false,\r\n        },\r\n\r\n        {\r\n          key: \"name\",\r\n          sortable: false,\r\n          thStyle: { width: \"25vw\" },\r\n          tdStyle: { width: \"25vw\" },\r\n        },\r\n        {\r\n          label: \"AMOUNT\",\r\n          key: \"balance\",\r\n          sortable: false,\r\n          thStyle: { width: \"6vw\" },\r\n          tdStyle: { width: \"6vw\" },\r\n        },\r\n        {\r\n          label: \"Dr/Cr\",\r\n          key: \"drcr\",\r\n          sortable: false,\r\n          thStyle: { width: \"5vw\" },\r\n          tdStyle: { width: \"5vw\" },\r\n        },\r\n        {\r\n          label: \"Selection\",\r\n          key: \"selection\",\r\n          sortable: false,\r\n          thStyle: { width: \"3vw\" },\r\n          tdStyle: { width: \"3vw\" },\r\n        },\r\n        {\r\n          label: \"Level 1\",\r\n          key: \"level1\",\r\n          sortable: false,\r\n          thStyle: { width: \"25vw\" },\r\n          tdStyle: { width: \"25vw\" },\r\n        },\r\n        {\r\n          label: \"Level 2\",\r\n          key: \"level2\",\r\n          sortable: false,\r\n          thStyle: { width: \"25vw\" },\r\n          tdStyle: { width: \"25vw\" },\r\n        },\r\n      ],\r\n\r\n      showDatatable: false,\r\n      orginalTaggingtreeData: [],\r\n      taggingTreeData: [],\r\n      filteredTaggingTreeData: [],\r\n      checkBoxValue: false,\r\n      l1Options: [],\r\n      l2Options: {}, \r\n      l3Options: {},\r\n    };\r\n  },\r\n  async mounted() {\r\n    this.getLedgerDetails();\r\n    this.reportingPeriodId = sessionStorage.getItem(\"reportId\");\r\n  },\r\n  methods: {\r\n    closeEditDialog(){\r\n      this.editLedger =false;\r\n    },\r\n    openEditDialog(val,data){ console.log(val,data)\r\n      this.editLedgerName.oldValue = val;\r\n      this.editLedgerName[\"data\"]=data;\r\n      this.editLedger =true;\r\n    },\r\n    async updateLedgerName(){\r\n      console.log(this.editLedgerName)\r\n      var res = await this.$apiService.put(`/ledgerDetails/editData`,{\"data\":{\"ledgerid\":this.editLedgerName.data.ledgerid,name:this.editLedgerName.newValue}});\r\n      if (res && res.status === 200) {\r\n        this.unSavedValue = [];\r\n        this.isDialogMode = 1;\r\n        this.dialogWidth = \"35vw\";\r\n        this.alertMeassage = \"Ledgers are Updated successfully.\";\r\n        this.editLedger=false;\r\n        //update\r\n        let orgIndex = this.$_.findLastIndex(this.orginalTaggingtreeData, {\r\n        name: this.editLedgerName.oldValue,\r\n        parent: this.editLedgerName.data.parent,\r\n      });\r\n      var rowNode = this.gridApi.getRowNode(this.editLedgerName.data.parent+this.editLedgerName.oldValue);\r\n      rowNode.setDataValue(\"name\", this.editLedgerName.newValue);\r\n      if (orgIndex != -1) this.orginalTaggingtreeData[orgIndex][\"name\"] = this.editLedgerName.newValue; \r\n        setTimeout(() => {\r\n          this.bulkTagLevel1Enabled = true;\r\n        }, 0);\r\n      }\r\n      if (res.data.status === \"error\") {\r\n        this.isDialogMode = 1;\r\n        this.dialogWidth = \"35vw\";\r\n        this.alertMeassage = \"Ledgers are not Update successfully.\";\r\n        this.editLedger=false;\r\n        setTimeout(() => {\r\n          this.bulkTagLevel1Enabled = true;\r\n        }, 0);\r\n      }\r\n    },\r\n    async aeSuccessCallback(addEntryData){\r\n      var selectedLedgersIndex =[];\r\n      addEntryData.forEach(async (val,idx)=>{\r\n        if(!val.notYetSaved) {   \r\n        let orgIndex = this.$_.findLastIndex(this.orginalTaggingtreeData, {\r\n            ledgerid: val.ledger\r\n          });\r\n          selectedLedgersIndex.push([orgIndex,idx]);\r\n        }\r\n      })\r\n        this.unSavedValue = [];\r\n        this.isDialogMode = 1;\r\n        this.dialogWidth = \"35vw\";\r\n        this.alertMeassage = \"Ledgers are Updated successfully.\";\r\n        console.log(this.orginalTaggingtreeData,selectedLedgersIndex,addEntryData,this.rowData,\"check\")\r\n        //update\r\n        selectedLedgersIndex.forEach((val)=>{\r\n          if(addEntryData[val[1]].type == \"Dr\")\r\n          this.orginalTaggingtreeData[val[0]][\"balance\"] = Number(this.orginalTaggingtreeData[val[0]][\"balance\"]) - Number(addEntryData[val[1]].amount);\r\n          else\r\n          this.orginalTaggingtreeData[val[0]][\"balance\"] = Number(this.orginalTaggingtreeData[val[0]][\"balance\"]) +  Number(addEntryData[val[1]].amount);\r\n        })\r\n        addEntryData.forEach(val=>{\r\n          let orgIndex = this.$_.findLastIndex(this.rowData, {\r\n            ledgerid: val.ledger\r\n          });  \r\n          if(orgIndex!=-1){\r\n            if(val.type == \"Dr\")\r\n          this.rowData[orgIndex][\"balance\"] = Number(this.rowData[orgIndex][\"balance\"]) - Number(val.amount);\r\n          else\r\n          this.rowData[orgIndex][\"balance\"] = Number(this.rowData[orgIndex][\"balance\"]) + Number(val.amount);\r\n          }         \r\n        })\r\n        addEntryData.forEach(async (val)=>{\r\n        if(val.notYetSaved) {\r\n            var res = await this.$apiService.get(`/ledgerDetails/getLedgerDetailsByName?reportingperioddataid=${Number(this.reportingPeriodId)}&name=${val.notYetSaved.name}`);\r\n      \r\n            if (res && res.status === 200 && res.data && res.data.data && res.data.data.length) { \r\n              console.log(res.data,\"data\")\r\n              let val = res.data.data[0];\r\n                val[\"level1\"] = val[\"level1\"] && val[\"level1\"]!=\"0\" ? val[\"level1\"].trim() : \"\";\r\n                val[\"level2\"] = val[\"level2\"] && val[\"level1\"]!=\"0\" ? val[\"level2\"].trim() : \"\";\r\n                val[\"level3\"] = val[\"level3\"] && val[\"level1\"]!=\"0\" ? val[\"level3\"].trim() : \"\";\r\n                val[\"drcr\"] = val[\"drcr\"]?val[\"drcr\"]:\"Dr\";\r\n                val.level2Options = this.l2Options[val[\"level1\"]];\r\n                if (val.level2Options)\r\n                  val.level3Options = this.l3Options[val[\"level1\"]][val[\"level2\"]];\r\n              this.orginalTaggingtreeData.push(val);\r\n              if(this.rowData[0].groupname == val.groupname)\r\n              this.rowData.push(val);\r\n            }    \r\n        }\r\n        })\r\n        this.gridApi.setRowData(this.rowData);\r\n        setTimeout(() => {\r\n          this.bulkTagLevel1Enabled = true;\r\n        }, 0);\r\n    },\r\n    aeFailedCallback(){\r\n      this.isDialogMode = 1;\r\n      this.dialogWidth = \"35vw\";\r\n      this.alertMeassage = \"Ledgers are not Updated successfully.\";\r\n      setTimeout(() => {\r\n          this.bulkTagLevel1Enabled = true;\r\n        }, 0);\r\n    },            \r\n    updateSelection(e,val){\r\n      console.log(e,val,\"e\",this.rowData,this.orginalTaggingtreeData);\r\n      // let index = this.$_.findLastIndex(this.rowData, {\r\n      //   name: val.name,\r\n      //   parent: val.parent,\r\n      // });\r\n      // this.sampleRowData = JSON.parse(JSON.stringify(this.rowData))\r\n      // this.rowData[index][\"selected\"] = e;\r\n      this.rowData = this.rowData.map(value=>{\r\n        if(this.groupingSelected){\r\n          if(value.name == val.name && value.parent == val.parent) value[\"selected\"] = e;\r\n        }\r\n        else{\r\n          if( value.isParentName ){\r\n            if(value.name == val.name) value[\"selected\"] = e;\r\n          }\r\n          else{\r\n            if(value.parent == val.name) value[\"selected\"] = e;\r\n          }\r\n        }\r\n        return value;\r\n      })\r\n      // var rowNode = this.gridApi.getRowNode(val.parent+val.name);\r\n      // console.log(rowNode,\"rowNode\")\r\n      // rowNode.setDataValue(\"selection\", e);\r\n      },\r\n    getRowNodeId(data){\r\n    return data.parent+data.name;},\r\n    onGridReady(params) {\r\n            this.gridApi = params.api;\r\n            this.gridApi.sizeColumnsToFit()\r\n            this.gridColumnApi = params.columnApi;\r\n    },\r\n    filterLevel1Options(e) {\r\n      this.l1FilterOption = JSON.parse(JSON.stringify(this.l1Options)).filter((val) => {\r\n        var regex = new RegExp(e, \"ig\");\r\n        if (regex.test(val.name)) return true;\r\n        else return false;\r\n      });\r\n    },\r\n    handleParentFil(item) {\r\n      if (this.parentChecked[item.header])\r\n        this.parentChecked[item.header] = false;\r\n      else this.parentChecked[item.header] = true;\r\n      this.l1FilterOption.forEach((val) => {\r\n        if (val.group == item.header) {\r\n          if (this.parentChecked[item.header]) {\r\n            this.childChecked[val.name] = true;\r\n          } else this.childChecked[val.name] = false;\r\n        }\r\n      });\r\n      //filter the table\r\n      var check = Object.values(this.childChecked).filter((val) => val);\r\n      var resultData = [];\r\n      if (check.length) {\r\n        resultData = JSON.parse(JSON.stringify(this.ledgerDataCopy)).filter(\r\n          (val) => { console.log(val,\"val\",this.childChecked)\r\n            if (!this.groupingSelected && val.isParentName) return true;\r\n            if (this.childChecked[val.level1]) return true;\r\n            else return false;\r\n          }\r\n        );\r\n\r\n        if (!this.groupingSelected)\r\n          resultData = resultData.filter((val, idx, arr) => {\r\n            if (arr[idx + 1] && val.isParentName && arr[idx + 1].isParentName)\r\n              return false;\r\n            else return true;\r\n          });\r\n        console.log(resultData, resultData[resultData.length - 1],this.ledgerDataCopy);\r\n        if (resultData[resultData.length - 1].isParentName) resultData.pop();\r\n        this.rowData = resultData;\r\n      } else {\r\n        this.rowData = JSON.parse(JSON.stringify(this.ledgerDataCopy))\r\n      }\r\n    },\r\n    handleChildFil(item) {\r\n      if (this.childChecked[item.name]) {\r\n        this.childChecked[item.name] = false;\r\n        if (this.parentChecked[item.group])\r\n          this.parentChecked[item.group] = false;\r\n      } else this.childChecked[item.name] = true;\r\n      //filter table\r\n      var check = Object.values(this.childChecked).filter((val) => val);\r\n      var resultData = [];\r\n      if (check.length) {\r\n        resultData = JSON.parse(JSON.stringify(this.ledgerDataCopy)).filter(\r\n          (val) => {\r\n            if (!this.groupingSelected && val.isParentName) return true;\r\n            if (this.childChecked[val.level1]) return true;\r\n            else return false;\r\n          }\r\n        );\r\n\r\n        if (!this.groupingSelected)\r\n          resultData = resultData.filter((val, idx, arr) => {\r\n            if (arr[idx + 1] && val.isParentName && arr[idx + 1].isParentName)\r\n              return false;\r\n            else return true;\r\n          });\r\n        console.log(resultData, resultData[resultData.length - 1]);\r\n        if (resultData[resultData.length - 1].isParentName) resultData.pop();\r\n        this.gridApi.setRowData(resultData);\r\n      } else {\r\n        this.gridApi.setRowData(this.ledgerDataCopy);\r\n      }\r\n    },\r\n    updateUnsavedValues(parent,name,orgIndex){\r\n      let unsaveIndex = this.$_.findLastIndex(this.unSavedValue, {\r\n        name: name,\r\n        parent: parent,\r\n      });\r\n      if (unsaveIndex != -1)\r\n        this.unSavedValue[unsaveIndex] = this.$_.pick(this.orginalTaggingtreeData[orgIndex],\"ledgerid\", \"name\", \"taggingheader\", \"level1\", \"level2\", \"level3\", \"balance\", \"isclosingbal\", \"groupname\", \"parent\", \"reportingperioddataid\", \"drcr\");\r\n      else this.unSavedValue.push(this.$_.pick(this.orginalTaggingtreeData[orgIndex],\"ledgerid\", \"name\", \"taggingheader\", \"level1\", \"level2\", \"level3\", \"isclosingbal\", \"balance\", \"groupname\", \"parent\", \"reportingperioddataid\", \"drcr\"));\r\n    },\r\n    drcrChange(parent, name, value) {\r\n      let orgIndex = this.$_.findLastIndex(this.orginalTaggingtreeData, {\r\n        name: name,\r\n        parent: parent,\r\n      });\r\n      var rowNode = this.gridApi.getRowNode(parent+name);\r\n      rowNode.setDataValue(\"drcr\", value);\r\n      if (orgIndex != -1) this.orginalTaggingtreeData[orgIndex][\"drcr\"] = value; \r\n      this.updateUnsavedValues(parent, name,orgIndex);     \r\n    },\r\n    validateLedgers() {\r\n      console.log(this.groupingSelected,\"groupingSelected\")\r\n      if (this.groupingSelected) {\r\n        var invalidparents = [];\r\n        if (this.showLevel2 && this.showLevel3) {\r\n          this.orginalTaggingtreeData.map((val) => { \r\n            if (!val.level1 || !val.level2 || !val.level3) {\r\n              invalidparents.push(val.parent);\r\n            }\r\n          });\r\n        } else if (this.showLevel1 && !this.showLevel2 && !this.showLevel3) {\r\n          this.orginalTaggingtreeData.map((val) => {\r\n            if (!val.level1) {\r\n              invalidparents.push(val.parent);\r\n            }\r\n          });\r\n        } else {\r\n          this.orginalTaggingtreeData.map((val) => {\r\n            if (!val.level1 || !val.level2) {\r\n              invalidparents.push(val.parent);\r\n            }\r\n          });\r\n        }\r\n        invalidparents = this.$_.uniq(invalidparents);\r\n        this.parentDisplayErrors = invalidparents;\r\n        var changedPossinleParents = [];\r\n        this.parentDisplayValues = [];\r\n        this.possibleParents.forEach((val) => {\r\n          if (invalidparents.indexOf(val.name) != -1)\r\n            changedPossinleParents.unshift({ name: val.name });\r\n          else changedPossinleParents.push({ name: val.name });\r\n        });\r\n        this.possibleParents = changedPossinleParents;\r\n        changedPossinleParents.forEach((val, idx) => {\r\n          if (idx < 5) {\r\n            this.parentDisplayValues.push(val.name);\r\n          }\r\n        });\r\n        this.changedPossinleParents = changedPossinleParents;\r\n        this.isParentValidCheck = true;\r\n        this.handleSelectParent(0)\r\n      } else {\r\n        if (this.showLevel2 && this.showLevel3) {\r\n          this.handleTagged(0, 3);\r\n        } else if (this.showLevel1 && !this.showLevel2 && !this.showLevel3) {\r\n          this.handleTagged(0, 1);\r\n        } else {\r\n          this.handleTagged(0, 2);\r\n        }\r\n      }\r\n    },\r\n    async handleSelectParent(idx) {\r\n      this.selectedParent = this.parentDisplayValues[idx];\r\n      console.log(this.isParentDetailsAvailable,this.selectedParent,this.isAllDataGot,idx )\r\n      if(this.isAllDataGot || this.isParentDetailsAvailable.indexOf(this.selectedParent)!=-1){\r\n        console.log(this.orginalTaggingtreeData,\"this.orginalTaggingtreeData\")\r\n        let resultData = this.orginalTaggingtreeData.filter(\r\n          (val) => val.parent == this.selectedParent\r\n        );\r\n        this.rowData = JSON.parse(JSON.stringify(resultData));\r\n        this.gridApi.setRowData(resultData);\r\n      }\r\n      else{\r\n        //get ledger details by reportingreperiodid ,parent name and balance type\r\n      var res = await this.$apiService.post(\"/ledgerDetails/get\", {\r\n        reportingperioddataid: Number(this.reportingPeriodId),\r\n        parentName: this.selectedParent,\r\n        isClosingBalance: true,\r\n      });\r\n      if (res && res.status === 200) {\r\n        this.isParentDetailsAvailable.push(this.selectedParent);\r\n        res.data.data = JSON.parse(res.data.data).map((val) => {\r\n          val[\"level1\"] = val[\"level1\"] ? val[\"level1\"].trim() : \"\";\r\n          val[\"level2\"] = val[\"level2\"] ? val[\"level2\"].trim() : \"\";\r\n          val[\"level3\"] = val[\"level3\"] ? val[\"level3\"].trim() : \"\";\r\n          val[\"drcr\"] = val[\"drcr\"]?val[\"drcr\"]:\"Dr\";\r\n          val.level2Options = this.l2Options[val[\"level1\"]];\r\n          if (val.level2Options)\r\n            val.level3Options = this.l3Options[val[\"level1\"]][val[\"level2\"]];\r\n          return val;\r\n        });\r\n        this.rowData = JSON.parse(JSON.stringify(res.data.data));\r\n        this.gridApi.setRowData(this.rowData);\r\n        this.orginalTaggingtreeData = this.orginalTaggingtreeData.concat(JSON.parse(JSON.stringify(res.data.data)));\r\n      }\r\n      }      \r\n    },\r\n    moveParent(idx) {\r\n      if (idx == 1) {\r\n        this.parentDisplayValues.pop();\r\n        let index = this.$_.findLastIndex(this.possibleParents, {\r\n          name: this.parentDisplayValues[0],\r\n        });\r\n        this.parentDisplayValues.unshift(this.possibleParents[index - 1].name);\r\n      } else {\r\n        this.parentDisplayValues.shift();\r\n        let index = this.$_.findLastIndex(this.possibleParents, {\r\n          name: this.parentDisplayValues[3],\r\n        });\r\n        this.parentDisplayValues.push(this.possibleParents[index + 1].name);\r\n      }\r\n    },\r\n    headerGroupHandel(idx) {\r\n      var resultData = [];\r\n      if (idx == 1) {\r\n        this.isHeadergroupOpen = false;\r\n        this.isCollapsedParent = [];\r\n        for (let key in this.isRowGroupOpen) {\r\n          this.isCollapsedParent.push(key);\r\n          this.isRowGroupOpen[key] = false;\r\n        }\r\n        resultData = JSON.parse(JSON.stringify(this.ledgerDataCopy)).filter(\r\n          (val) => {\r\n            if (val.parent) {\r\n              return false;\r\n            } else return true;\r\n          }\r\n        );\r\n        this.gridApi.setRowData(resultData)\r\n      } else {\r\n        this.isHeadergroupOpen = true;\r\n        this.isCollapsedParent = [];\r\n        for (let key in this.isRowGroupOpen) {\r\n          this.isRowGroupOpen[key] = true;\r\n        }\r\n        let resultSData = this.$_.sortBy(\r\n          JSON.parse(JSON.stringify(this.ledgerDataCopy)),\r\n          function (val) {\r\n            return val.indexForSort;\r\n          }\r\n        );\r\n        this.gridApi.setRowData(resultSData)\r\n      }\r\n    },\r\n    rowGroupHandler(name, idx) {\r\n      if (idx == 1) {\r\n        this.isCollapsedParent.push(name);\r\n        this.isRowGroupOpen[name] = false;\r\n      } else {\r\n        this.isCollapsedParent = this.isCollapsedParent.filter(\r\n          (val) => val != name\r\n        );\r\n        this.isRowGroupOpen[name] = true;\r\n      }\r\n      var resultData = [];\r\n      resultData = JSON.parse(JSON.stringify(this.ledgerDataCopy)).filter(\r\n        (val) => {\r\n          if (val.parent && this.isCollapsedParent.indexOf(val.parent) != -1)\r\n            return false;\r\n          else return true;\r\n        }\r\n      );\r\n      this.gridApi.setRowData(resultData)\r\n      // this.rowData = JSON.parse(JSON.stringify(resultData))\r\n    },\r\n    handleTagged(val, level) {\r\n      var resultData = [];\r\n      if (level == 1) {\r\n        console.log(this.rowData,this.level1filter)\r\n        if (this.level1filter == val) this.level1filter = null;\r\n        else this.level1filter = val;\r\n        if (this.level1filter == 0) {\r\n          resultData = JSON.parse(\r\n            JSON.stringify(\r\n              this.rowData\r\n            )\r\n          ).filter((val) => {\r\n            if (!this.groupingSelected && val.isParentName) return true;\r\n            if (\r\n              val.level1 != \"0\" &&\r\n              val.level1 &&\r\n              !/no level/i.test(val.level1)\r\n            )\r\n              return false;\r\n            else return true;\r\n          });\r\n        } else if (this.level1filter == 1) {\r\n          resultData = JSON.parse(\r\n            JSON.stringify(\r\n              this.rowData\r\n            )\r\n          ).filter((val) => {\r\n            if (!this.groupingSelected && val.isParentName) return true;\r\n            if (\r\n              val.level1 != \"0\" &&\r\n              val.level1 &&\r\n              !/no level/i.test(val.level1)\r\n            )\r\n              return true;\r\n            else return false;\r\n          });\r\n        } else {\r\n          resultData = JSON.parse(\r\n            JSON.stringify(\r\n              this.rowData\r\n            )\r\n          )\r\n        }\r\n      } else if (level == 2) {\r\n        if (this.level2filter == val) this.level2filter = null;\r\n        else this.level2filter = val;\r\n        if (this.level2filter == 0) {\r\n          resultData = JSON.parse(\r\n            JSON.stringify(\r\n              this.rowData\r\n            )\r\n          ).filter((val) => {\r\n            if (!this.groupingSelected && val.isParentName) return true;\r\n            if (\r\n              val.level2 != \"0\" &&\r\n              val.level2 &&\r\n              !/no level/i.test(val.level2) &&\r\n              val.level1 != \"0\" &&\r\n              val.level1 &&\r\n              !/no level/i.test(val.level1)\r\n            )\r\n              return false;\r\n            else return true;\r\n          });\r\n        } else if (this.level2filter == 1) {\r\n          resultData = JSON.parse(\r\n            JSON.stringify(\r\n              this.rowData\r\n            )\r\n          ).filter((val) => {\r\n            if (!this.groupingSelected && val.isParentName) return true;\r\n            if (\r\n              val.level2 != \"0\" &&\r\n              val.level2 &&\r\n              !/no level/i.test(val.level2) &&\r\n              val.level1 != \"0\" &&\r\n              val.level1 &&\r\n              !/no level/i.test(val.level1)\r\n            )\r\n              return true;\r\n            else return false;\r\n          });\r\n        } else {\r\n          resultData = JSON.parse(\r\n            JSON.stringify(\r\n              this.rowData\r\n            )\r\n          )\r\n        }\r\n      } else {\r\n        if (this.level3filter == val) this.level3filter = null;\r\n        else this.level3filter = val;\r\n        if (this.level3filter == 0) {\r\n          resultData = JSON.parse(\r\n            JSON.stringify(\r\n              this.rowData\r\n            )\r\n          ).filter((val) => {\r\n            if (!this.groupingSelected && val.isParentName) return true;\r\n            if (\r\n              val.level3 != \"0\" &&\r\n              val.level3 &&\r\n              !/no level/i.test(val.level3) &&\r\n              val.level2 != \"0\" &&\r\n              val.level2 &&\r\n              !/no level/i.test(val.level2) &&\r\n              val.level1 != \"0\" &&\r\n              val.level1 &&\r\n              !/no level/i.test(val.level1)\r\n            )\r\n              return false;\r\n             else return true;\r\n          });\r\n        } else if (this.level3filter == 1) {\r\n          resultData = JSON.parse(\r\n            JSON.stringify(\r\n              this.rowData\r\n            )\r\n          ).filter((val) => {\r\n            if (!this.groupingSelected && val.isParentName) return true;\r\n            if (\r\n              val.level3 != \"0\" &&\r\n              val.level3 &&\r\n              !/no level/i.test(val.level3) &&\r\n              val.level2 != \"0\" &&\r\n              val.level2 &&\r\n              !/no level/i.test(val.level2) &&\r\n              val.level1 != \"0\" &&\r\n              val.level1 &&\r\n              !/no level/i.test(val.level1)\r\n            )\r\n              return true;\r\n             else return false;\r\n          });\r\n        } else {\r\n          resultData = JSON.parse(\r\n            JSON.stringify(\r\n              this.rowData\r\n            )\r\n          )\r\n        }\r\n      }\r\n      if (!this.groupingSelected)\r\n        resultData = resultData.filter((val, idx, arr) => {\r\n          if (arr[idx + 1] && val.isParentName && arr[idx + 1].isParentName)\r\n            return false;\r\n          else if (this.selectedParent) {\r\n            if (this.selectedParent == val.parent) return true;\r\n            else return false;\r\n          } else return true;\r\n        });\r\n        this.gridApi.setRowData(resultData);\r\n    },\r\n    preventTypeChange(e) {\r\n      if (this.unSavedValue.length) {\r\n        this.isDialogMode = 1;\r\n        this.dialogWidth = \"35vw\";\r\n        this.alertMeassage =\r\n          \"Please Save the changes before changing the Balance Type\";\r\n        setTimeout(() => {\r\n          this.bulkTagLevel1Enabled = true;\r\n        }, 0);\r\n        return;\r\n      } else {\r\n        let val = e.target.innerText;\r\n        this.selectedImportLevel = val;\r\n        this.getFullLedgerDetails();\r\n      // this.gridApi.refreshCells();\r\n      }\r\n    },\r\n    downloadCSV(data) {\r\n      var csv = this.$papa.unparse(data);\r\n\r\n      var csvData = new Blob([csv], { type: \"text/csv;charset=utf-8;\" });\r\n      var csvURL = null;\r\n      if (navigator.msSaveBlob) {\r\n        csvURL = navigator.msSaveBlob(csvData, \"ledgerDetails.csv\");\r\n      } else {\r\n        csvURL = window.URL.createObjectURL(csvData);\r\n      }\r\n\r\n      var tempLink = document.createElement(\"a\");\r\n      tempLink.href = csvURL;\r\n      tempLink.setAttribute(\"download\", \"ledgerDetails.csv\");\r\n      tempLink.click();\r\n    },\r\n    async handleExport(idx) {\r\n      var res = null;\r\n        if(!this.isAllDataGot){\r\n        res = await this.$apiService.post(\"/ledgerDetails/get\", {\r\n          reportingperioddataid: Number(this.reportingPeriodId),\r\n          parentName: \"ALL\",\r\n          isClosingBalance: this.selectedImportLevel == \"Closing Balance\",\r\n        });\r\n        this.orginalTaggingtreeData = JSON.parse(res.data.data);\r\n        }\r\n      if (this.isAllDataGot || (res && res.status === 200)) {\r\n        this.isAllDataGot = true;\r\n        var pdfData = this.orginalTaggingtreeData.map((val) => {\r\n          if (val.isParentName)\r\n            return [\r\n              { content: val.name, colSpan: 6, styles: { fontStyle: \"bold\" } },\r\n            ];\r\n          else\r\n            return [\r\n              val.name,numeral(val[\"balance\"]).format(\"0,0\"),\r\n              // this.selectedImportLevel == \"Closing Balance\"\r\n              //   ? numeral(val[\"balance\"]).format(\"0,0\")\r\n              //   : numeral(val[\"balance\"]).format(\"0,0\"),\r\n              val[\"drcr\"] ? val[\"drcr\"] : \"Dr\",\r\n              val.level1,\r\n              val.level2,\r\n              val.level3,\r\n            ];\r\n        });\r\n        if (idx == 1) {\r\n          this.generatePdf(\r\n            {\r\n              theme: \"grid\",\r\n              // body: [\r\n              // [{ content: 'Text',sample:'gh', colSpan: 2, styles: { halign: 'center' } }],\r\n              body: pdfData,\r\n              // ],\r\n              head: [\r\n                [\r\n                  \"Name Of Ledgers\",\r\n                  \"Amount\",\r\n                  \"Dr/Cr\",\r\n                  \"LEVEL 1\",\r\n                  \"LEVEL 2\",\r\n                  \"LEVEL 3\",\r\n                ],\r\n              ],\r\n              tableWidth: \"auto\",\r\n              styles: { fontSize: \"7.5\" },\r\n            },\r\n            \"ledgerDetails\"\r\n          );\r\n        } else {\r\n          this.excelArray = this.orginalTaggingtreeData.map((val) => {\r\n            return {\r\n              \"Name Of Ledger\": val.name,\r\n              Amount:numeral(val[\"balance\"]).format(\"0,0\"),\r\n                // this.selectedImportLevel == \"Closing Balance\"\r\n                //   ? numeral(val[\"balance\"]).format(\"0,0\")\r\n                //   : numeral(val[\"balance\"]).format(\"0,0\"),\r\n              \"Dr/Cr\": val[\"drcr\"] ? val[\"drcr\"] : \"Dr\",\r\n              \"LEVEL 1\": val.level1,\r\n              \"LEVEL 2\": val.level2,\r\n              \"LEVEL 3\": val.level3,\r\n            };\r\n          });\r\n          this.downloadCSV(this.excelArray);\r\n        }\r\n      }\r\n    },\r\n    generatePdf(config, name) {\r\n      const doc = new jsPDF();\r\n      doc.autoTable(config);\r\n      doc.save(name + \".pdf\");\r\n    },\r\n    handleAllLedgers() {\r\n      this.checkBoxValue = !this.checkBoxValue;\r\n      this.rowData = this.rowData.map((x) => {\r\n        x.selected = this.checkBoxValue;\r\n        return x;\r\n      });\r\n    },\r\n    ledgerDialogl1Changed(e) {\r\n      this.dialogL1Value = e;\r\n      if (this.isDialogMode == 3) {\r\n        this.dialogL2Value = \"\";\r\n        this.l2 = [];\r\n        if (this.l2Options[e]) this.l2 = this.l2Options[e];\r\n      }\r\n    },\r\n    ledgerDialogl2Changed(e) {\r\n      this.dialogL2Value = e;\r\n    },\r\n    closeDialog() {\r\n      this.bulkTagLevel1Enabled = false;\r\n    },\r\n    filterTableByledger(e) { \r\n      var resultData = [];\r\n      this.orginalTaggingtreeData.forEach((val) => {\r\n        if (e) {          \r\n          var regex = new RegExp(e, \"i\");\r\n          if (\r\n            regex.test(val.name) &&\r\n            (this.selectedParent ? this.selectedParent == val.parent : true)\r\n          )\r\n            resultData.push(val);\r\n        } else if(this.selectedParent == val.parent) resultData.push(val);\r\n      });\r\n      this.gridApi.setRowData(resultData)\r\n    },\r\n    async getFullLedgerDetails(){\r\n      store.commit('SET_IS_LOADING',true);  \r\n      //get ledger details by reportingreperiodid ,parent name and balance type\r\n          var res = await this.$apiService.post(\"/ledgerDetails/get\", {\r\n            reportingperioddataid: Number(this.reportingPeriodId),\r\n            parentName: \"ALL\",\r\n            isClosingBalance: this.selectedImportLevel == \"Closing Balance\",\r\n          });\r\n          if (res && res.status === 200) {\r\n            res.data.data = JSON.parse(res.data.data).map((val) => {\r\n              val[\"level1\"] = val[\"level1\"] && val[\"level1\"]!=\"0\" ? val[\"level1\"].trim() : \"\";\r\n              val[\"level2\"] = val[\"level2\"] && val[\"level1\"]!=\"0\" ? val[\"level2\"].trim() : \"\";\r\n              val[\"level3\"] = val[\"level3\"] && val[\"level1\"]!=\"0\" ? val[\"level3\"].trim() : \"\";\r\n              val[\"drcr\"] = val[\"drcr\"]?val[\"drcr\"]:\"Dr\";\r\n\r\n              val.level2Options = this.l2Options[val[\"level1\"]];\r\n              if (val.level2Options)\r\n                val.level3Options = this.l3Options[val[\"level1\"]][val[\"level2\"]];\r\n              return val;\r\n            });\r\n            var index = this.parentDisplayValues.indexOf(this.selectedParent);\r\n            this.orginalTaggingtreeData = JSON.parse(JSON.stringify(res.data.data));\r\n            this.isAllDataGot = true;\r\n            this.handleSelectParent(index);\r\n            // console.log(res.data.data,\"res.data.data\")\r\n            // this.rowData = JSON.parse(JSON.stringify(res.data.data));\r\n            \r\n          }\r\n          store.commit('SET_IS_LOADING',true); \r\n              //get tagging dashoard value\r\n          var res1 = await this.$apiService.get(`ledger/taggingdashvalue?reportingPeriodId=${sessionStorage.getItem(\"reportId\")}&level=${sessionStorage.getItem(\"taggingLevel\")}`);\r\n          if(res1&&res1.status === 200) {  \r\n            this.totalLedger = res1.data.data.closingBalance.ledger.total;\r\n            this.totaltaggedLedger = res1.data.data.closingBalance.ledger.tagged;\r\n          } \r\n    },\r\n    async getLedgerDetails() {\r\n      store.commit('SET_IS_LOADING',true); \r\n      this.fina = JSON.parse(sessionStorage.getItem(\"fina\"));\r\n      var companyId = JSON.parse(sessionStorage.getItem(\"fina\")).company_id;      \r\n      // get l1 l2 l3 options by company type\r\n      var levelsOptionsRes = await this.$apiService.post(\"/taggingtree\", {\r\n        companyId: companyId,\r\n      });\r\n      store.commit('SET_IS_LOADING',true);       \r\n      var options = JSON.parse(levelsOptionsRes.data.data);\r\n      this.l1Options = options.l1.data;\r\n      this.l2Options = options.l2;\r\n      this.l3Options = options.l3;\r\n      this.l1FilterOption = JSON.parse(JSON.stringify(this.l1Options));\r\n      //gorup wise tagging concept\r\n      var total = 0;\r\n      var parentname = [];\r\n      var loopCount = 0;\r\n      this.possibleParents=[];\r\n      var firstLedgerGot = false; \r\n      setTimeout(() => {\r\n        store.commit('SET_IS_LOADING',true);\r\n      }, 100);\r\n       store.commit('SET_IS_LOADING',true);     \r\n      this.constantlyChecking = setInterval(async() => {\r\n        var parentRes;\r\n        if(!firstLedgerGot){\r\n        //get all parents name for this reportingperiod id\r\n        parentRes = await this.$apiService.post(\"/ledgerDetails/getParents\", {\r\n          reportingperioddataid: Number(this.reportingPeriodId)\r\n        });\r\n        \r\n        store.commit('SET_IS_LOADING',true); \r\n        }\r\n        else{\r\n          await fetch(\"http://localhost:8080/ledgerDetails/getParents\",{method:\"POST\",headers:{\r\n            'Content-Type': 'application/json'\r\n            },body:JSON.stringify({reportingperioddataid: Number(this.reportingPeriodId)})\r\n          }).then(res=>res.json()).then(res=>{parentRes={\"data\":res}});\r\n          \r\n        }\r\n        console.log(parentRes,\"parentRes\")\r\n        if (parentRes) {\r\n          if(!total) total = parentRes.data.data.totalgroup;\r\n          console.log(parentRes.data.data.groupcompleted,\"parentRes.data.data.groupcompleted\")\r\n          parentname[loopCount] = parentRes.data.data.groupcompleted;\r\n          parentname[loopCount].forEach((val,idx)=>{\r\n            if(val != 'Profit & Loss A/c' && idx>this.possibleParents.length-1)\r\n              this.possibleParents.push({\"name\":val})\r\n          })\r\n          \r\n          if(this.parentDisplayValues.length<=5)this.parentDisplayValues = this.possibleParents.map(val=>val.name).slice(0, 5);\r\n          if(!this.selectedParent)this.selectedParent = this.parentDisplayValues[0];\r\n          if(!this.selectedParent)this.isParentDetailsAvailable.push(this.selectedParent);\r\n          console.log(firstLedgerGot ,this.possibleParents[0] )\r\n          if(!firstLedgerGot && this.possibleParents[0]){\r\n                firstLedgerGot = true;\r\n                //get ledger details by reportingreperiodid ,parent name and balance type\r\n                var res = await this.$apiService.post(\"/ledgerDetails/get\", {\r\n                  reportingperioddataid: Number(this.reportingPeriodId),\r\n                  parentName: this.parentDisplayValues[0],\r\n                  isClosingBalance: true,\r\n                });\r\n                if (res && res.status === 200) {\r\n                  res.data.data = JSON.parse(res.data.data).map((val) => {\r\n                    val[\"level1\"] = val[\"level1\"] && val[\"level1\"]!=\"0\" ? val[\"level1\"].trim() : \"\";\r\n                    val[\"level2\"] = val[\"level2\"] && val[\"level1\"]!=\"0\" ? val[\"level2\"].trim() : \"\";\r\n                    val[\"level3\"] = val[\"level3\"] && val[\"level1\"]!=\"0\" ? val[\"level3\"].trim() : \"\";\r\n                    val[\"drcr\"] = val[\"drcr\"]?val[\"drcr\"]:\"Dr\";\r\n                    val.level2Options = this.l2Options[val[\"level1\"]];\r\n                    if (val.level2Options)\r\n                      val.level3Options = this.l3Options[val[\"level1\"]][val[\"level2\"]];\r\n                    return val;\r\n                  });\r\n                  this.rowData = JSON.parse(JSON.stringify(res.data.data));\r\n                  this.orginalTaggingtreeData = JSON.parse(JSON.stringify(res.data.data));\r\n                }\r\n          }\r\n          if(total <= parentRes.data.data.groupcompleted.length) {  \r\n            this.clearIntervalFn();          \r\n            this.getFullLedgerDetails()\r\n      //             //get total ledger count for this reportingperiod id\r\n      // var totalRes = await this.$apiService.post(\r\n      //   \"/ledgerDetails/getTotalLedgerCount\",\r\n      //   { reportingperioddataid: reportingPeriodId }\r\n      // );\r\n      // if (totalRes && totalRes.status === 200) {\r\n      //   this.totalLedger = totalRes.data.data[0].exact_count;\r\n      // }\r\n    //get tagging dashoard value\r\n        var res1 = await this.$apiService.get(`ledger/taggingdashvalue?reportingPeriodId=${sessionStorage.getItem(\"reportId\")}&level=${sessionStorage.getItem(\"taggingLevel\")}`);\r\n            if(res1&&res1.status === 200) {  \r\n              this.totalLedger = res1.data.data.closingBalance.ledger.total;\r\n              this.totaltaggedLedger = res1.data.data.closingBalance.ledger.tagged;\r\n            }\r\n\r\n          }\r\n          loopCount++;\r\n        } \r\n        else{\r\n           clearInterval(this.constantlyChecking);\r\n        }       \r\n        }, 3000);\r\n    },\r\n    clearIntervalFn(){\r\n      clearInterval(this.constantlyChecking)\r\n    },\r\n    async viewChange(e) {\r\n      this.groupingSelected = e;\r\n      if (e) {\r\n        this.tableHeight = \"61.8vh\";\r\n          // this.gridApi.setRowData(JSON.parse(JSON.stringify(this.orginalTaggingtreeData)))\r\n          this.rowData = JSON.parse(JSON.stringify(this.orginalTaggingtreeData)).filter(val=>this.selectedParent == val.parent);\r\n      } else {\r\n        this.isRowGroupOpen = [];\r\n        this.tableHeight = \"68vh\";\r\n        var res = null;\r\n        if(!this.isAllDataGot){\r\n        res = await this.$apiService.post(\"/ledgerDetails/get\", {\r\n          reportingperioddataid: Number(this.reportingPeriodId),\r\n          parentName: \"ALL\",\r\n          isClosingBalance: this.selectedImportLevel == \"Closing Balance\",\r\n        });\r\n        this.orginalTaggingtreeData = JSON.parse(JSON.stringify(res))\r\n        }\r\n        else{\r\n          res = JSON.parse(JSON.stringify(this.orginalTaggingtreeData));\r\n        }\r\n        if (this.isAllDataGot || (res && res.status === 200)) {\r\n          this.isAllDataGot = true;\r\n          let dataCopy = JSON.parse(JSON.stringify(this.orginalTaggingtreeData));\r\n          let resultData = [];\r\n          var temp1 = this.$_.groupBy(dataCopy, (val) => val.parent);\r\n          var indexForSort = 0;\r\n          for (let key in temp1) {\r\n            this.isRowGroupOpen[key] = true;\r\n            resultData.push({\r\n              parent:key,\r\n              name: key,\r\n              isParentName: true,\r\n              indexForSort: indexForSort++,\r\n            });\r\n            temp1[key] = temp1[key].map((val) => {\r\n              val[\"level1\"] = val[\"level1\"] ? val[\"level1\"].trim() : \"\";\r\n          val[\"level2\"] = val[\"level2\"] ? val[\"level2\"].trim() : \"\";\r\n          val[\"level3\"] = val[\"level3\"] ? val[\"level3\"].trim() : \"\";\r\n          val[\"drcr\"] = val[\"drcr\"]?val[\"drcr\"]:\"Dr\";\r\n\r\n          val.level2Options = this.l2Options[val[\"level1\"]];\r\n          if (val.level2Options)\r\n            val.level3Options = this.l3Options[val[\"level1\"]][val[\"level2\"]];\r\n              val[\"indexForSort\"] = indexForSort++;\r\n              return val;\r\n            });\r\n            resultData = resultData.concat(temp1[key]);\r\n          }\r\n          this.rowData = JSON.parse(JSON.stringify(resultData));\r\n          // this.gridApi.setRowData(JSON.parse(JSON.stringify(resultData)))\r\n          this.ledgerDataCopy = resultData;\r\n        }\r\n      }\r\n    },\r\n    bulkTagLevel(val) {\r\n      this.dialogL1Value = \"\";\r\n      this.dialogL2Value = \"\";\r\n      let selected = [];\r\n      selected = this.rowData.filter((x) => x.selected == true);\r\n      if (selected.length < 1) {\r\n        this.isDialogMode = 1;\r\n        this.dialogWidth = \"35vw\";\r\n        this.alertMeassage =\r\n          \"Please Select atlest one Ledger to do Bulk tagging.\";\r\n      } else {\r\n        this.isDialogMode = val;\r\n        if (val == 2) this.dialogWidth = \"35vw\";\r\n        else {\r\n          let isSame = true;\r\n          for (let i = 1; i < selected.length; i++) {\r\n            if (selected[i].level1 != selected[i - 1].level1) {\r\n              isSame = false;\r\n              break;\r\n            }\r\n          }\r\n          if (isSame || this.isDiffBulck) {\r\n            this.dialogWidth = \"50vw\";\r\n            this.isDiffBulck = false;\r\n          } else {\r\n            this.isDiffBulck = !isSame;\r\n            this.isDialogMode = 1;\r\n            this.dialogWidth = \"35vw\";\r\n            this.alertMeassage =\r\n              \"Selected Ledgers has different L1 values,Do you want to Continue?\";\r\n          }\r\n        }\r\n      }\r\n      this.bulkTagLevel1Enabled = true;\r\n    },\r\n    hideLevel3Fields() {\r\n      let modifiedColumn = JSON.parse(JSON.stringify(this.allColumnDefs));\r\n      modifiedColumn[7].hide =true;\r\n      this.columnDefs= modifiedColumn;\r\n      this.showLevel3 = false;\r\n    },\r\n    hideLevel2Fields() {\r\n      let modifiedColumn = JSON.parse(JSON.stringify(this.allColumnDefs));\r\n      modifiedColumn[6].hide =true;\r\n      this.columnDefs= modifiedColumn;\r\n      this.showLevel2 = false;\r\n      this.showLevel3 = false;\r\n    },\r\n    showLevel2Fields() {\r\n      this.showLevel2 = true;\r\n      this.columnDefs= JSON.parse(JSON.stringify(this.allColumnDefs));\r\n    },\r\n    showLevel3Fields() {      \r\n      this.showLevel3 = true;\r\n      let modifiedColumn = JSON.parse(JSON.stringify(this.allColumnDefs));\r\n      modifiedColumn[7].hide =false;\r\n      this.columnDefs= modifiedColumn;\r\n    },\r\n    async saveAllLedgers() { \r\n      var res = await this.$apiService.put(`/ledgerDetails`,{\"data\":JSON.stringify(this.unSavedValue)});\r\n      if (res && res.status === 200) {\r\n        this.unSavedValue = [];\r\n        this.isDialogMode = 1;\r\n        this.dialogWidth = \"35vw\";\r\n        this.alertMeassage = \"Ledgers are saved successfully.\";\r\n        setTimeout(() => {\r\n          this.bulkTagLevel1Enabled = true;\r\n        }, 0);\r\n      }\r\n      if (res.data.status === \"error\") {\r\n        this.isDialogMode = 1;\r\n        this.dialogWidth = \"35vw\";\r\n        this.alertMeassage = \"Ledgers are not saved successfully.\";\r\n        setTimeout(() => {\r\n          this.bulkTagLevel1Enabled = true;\r\n        }, 0);\r\n      }\r\n    },\r\n    ledgerLevel1Changed(val) {\r\n      val[\"level2Options\"] = this.l2Options[val[\"level1\"]]\r\n        ? this.l2Options[val[\"level1\"]]\r\n        : [];\r\n      val[\"level3Options\"] = [];\r\n      val[\"level2\"] = \"\";\r\n      val[\"level3\"] = \"\";\r\n      val[\"level1\"] = val[\"level1\"] ? val[\"level1\"].trim() : \"\";\r\n      if(this.groupingSelected || !val.isParentName){\r\n        let index = this.$_.findLastIndex(this.orginalTaggingtreeData, {\r\n          name: val.name,\r\n          parent: val.parent,\r\n        });\r\n        if(this.orginalTaggingtreeData[index]){\r\n        this.orginalTaggingtreeData[index][\"level1\"] = val[\"level1\"];\r\n        this.orginalTaggingtreeData[index][\"level2\"] = val[\"level2\"];\r\n        this.orginalTaggingtreeData[index][\"level3\"] = val[\"level3\"];\r\n        }      \r\n        var rowNode = this.gridApi.getRowNode(val.parent+val.name);\r\n        rowNode.setDataValue(\"level1\", val[\"level1\"]);\r\n        this.updateUnsavedValues(val.parent,val.name,index); \r\n      }\r\n      else{\r\n        this.orginalTaggingtreeData = this.orginalTaggingtreeData.map(value=>{\r\n          if(val.isParentName && value.parent == val.parent && value.name == val.name){\r\n        if(!value[\"level1\"])value[\"level1\"] = val[\"level1\"];\r\n        if(!value[\"level2\"])value[\"level2\"] = val[\"level2\"];\r\n        if(!value[\"level3\"])value[\"level3\"] = val[\"level3\"];\r\n          }\r\n          else if(value.parent == val.name){\r\n        if(!value[\"level1\"])value[\"level1\"] = val[\"level1\"];\r\n        if(!value[\"level2\"])value[\"level2\"] = val[\"level2\"];\r\n        if(!value[\"level3\"])value[\"level3\"] = val[\"level3\"];\r\n          }\r\n          return value;\r\n        });\r\n        this.rowData = this.rowData.map(value=>{\r\n          if(val.isParentName && value.parent == val.parent && value.name == val.name){\r\n        if(!value[\"level1\"])value[\"level1\"] = val[\"level1\"];\r\n        if(!value[\"level2\"])value[\"level2\"] = val[\"level2\"];\r\n        if(!value[\"level3\"])value[\"level3\"] = val[\"level3\"];\r\n          }\r\n          else if(value.parent == val.name){\r\n        if(!value[\"level1\"])value[\"level1\"] = val[\"level1\"];\r\n        if(!value[\"level2\"])value[\"level2\"] = val[\"level2\"];\r\n        if(!value[\"level3\"])value[\"level3\"] = val[\"level3\"];\r\n          }\r\n          return value;\r\n        })\r\n      }\r\n    },\r\n    BulkTagOneChanged(value) {\r\n      let level2 = [];\r\n      this.allTagHeaders = JSON.parse(\r\n        JSON.stringify(this.$store.getters.tagHeaders)\r\n      );\r\n      var tagFilter = this.allTagHeaders.filter((x) => x.level1 == value);\r\n      if (tagFilter.length == 0) return;\r\n\r\n      if (tagFilter.length != 0) {\r\n        tagFilter[0].level2.forEach((element) => {\r\n          level2.push(element.level2name);\r\n        });\r\n      }\r\n      if (level2.length > 0) {\r\n        this.level2BulkValues = level2;\r\n      } else {\r\n        this.level2BulkValues = [];\r\n      }\r\n      this.bulkTagSelectedLevel2 = \"\";\r\n    },\r\n    ledgerLevel3Changed(val) {\r\n      val[\"level3\"] = val[\"level3\"] ? val[\"level3\"].trim() : \"\";\r\n      if(this.groupingSelected || !val.isParentName){\r\n      let index = this.$_.findLastIndex(this.orginalTaggingtreeData, {\r\n        name: val.name,\r\n        parent: val.parent,\r\n      });\r\n      this.orginalTaggingtreeData[index][\"level3\"] = val[\"level3\"];\r\n      var rowNode = this.gridApi.getRowNode(val.parent+val.name);\r\n      rowNode.setDataValue(\"level3\", val[\"level3\"]);\r\n      this.updateUnsavedValues(val.parent,val.name,index); \r\n      }\r\n      else{\r\n      this.orginalTaggingtreeData = this.orginalTaggingtreeData.map(value=>{\r\n        if(val.isParentName && value.parent == val.parent && value.name == val.name){\r\n      if(!value[\"level3\"])value[\"level3\"] = val[\"level3\"];\r\n        }\r\n        else if(value.parent == val.name){\r\n      if(!value[\"level3\"])value[\"level3\"] = val[\"level3\"];\r\n        }\r\n        return value;\r\n      });\r\n      this.rowData = this.rowData.map(value=>{\r\n        if(val.isParentName && value.parent == val.parent && value.name == val.name){\r\n      if(!value[\"level3\"])value[\"level3\"] = val[\"level3\"];\r\n        }\r\n        else if(value.parent == val.name){\r\n      if(!value[\"level3\"])value[\"level3\"] = val[\"level3\"];\r\n        }\r\n        return value;\r\n      })\r\n    }\r\n    },\r\n    ledgerLevel2Changed(val) {\r\n      val[\"level2\"] = val[\"level2\"] ? val[\"level2\"].trim() : \"\";\r\n      val[\"level3\"] = \"\";\r\n      val[\"level3Options\"] = [];\r\n      if (\r\n        this.l3Options[val[\"level1\"]] &&\r\n        this.l3Options[val[\"level1\"]][val[\"level2\"]]\r\n      )\r\n      val[\"level3Options\"] = this.l3Options[val[\"level1\"]][val[\"level2\"]];\r\n      if(this.groupingSelected || !val.isParentName){\r\n      let index = this.$_.findLastIndex(this.orginalTaggingtreeData, {\r\n        name: val.name,\r\n        parent: val.parent,\r\n      });\r\n      this.orginalTaggingtreeData[index][\"level2\"] = val[\"level2\"];\r\n      this.orginalTaggingtreeData[index][\"level3\"] = val[\"level3\"];\r\n      var rowNode = this.gridApi.getRowNode(val.parent+val.name);\r\n      rowNode.setDataValue(\"level2\", val[\"level2\"]);\r\n      this.updateUnsavedValues(val.parent,val.name,index); \r\n      }\r\n      else{\r\n      this.orginalTaggingtreeData = this.orginalTaggingtreeData.map(value=>{\r\n        if(val.isParentName && value.parent == val.parent && value.name == val.name){\r\n      if(!value[\"level2\"])value[\"level2\"] = val[\"level2\"];\r\n      if(!value[\"level3\"])value[\"level3\"] = val[\"level3\"];\r\n        }\r\n        else if(value.parent == val.name){\r\n      if(!value[\"level2\"])value[\"level2\"] = val[\"level2\"];\r\n      if(!value[\"level3\"])value[\"level3\"] = val[\"level3\"];\r\n        }\r\n        return value;\r\n      });\r\n      this.rowData = this.rowData.map(value=>{\r\n        if(val.isParentName && value.parent == val.parent && value.name == val.name){\r\n      if(!value[\"level2\"])value[\"level2\"] = val[\"level2\"];\r\n      if(!value[\"level3\"])value[\"level3\"] = val[\"level3\"];\r\n        }\r\n        else if(value.parent == val.name){\r\n      if(!value[\"level2\"])value[\"level2\"] = val[\"level2\"];\r\n      if(!value[\"level3\"])value[\"level3\"] = val[\"level3\"];\r\n        }\r\n        return value;\r\n      })\r\n    }\r\n    },\r\n    async fillLedgerData(data) {\r\n      const allTagHeaders = JSON.parse(\r\n        JSON.stringify(this.$store.getters.tagHeaders)\r\n      );\r\n      data.forEach((x) => {\r\n        x[\"selection\"] = false;\r\n        if (parseInt(x[\"balance\"]) < 0) {\r\n          x[\"drcr\"] = \"Cr\";\r\n        } else {\r\n          x[\"drcr\"] = \"Dr\";\r\n        }\r\n\r\n        let level1 = [];\r\n\r\n        var tagFilter = allTagHeaders.filter((row) => row.level1 == x.level1);\r\n        if (tagFilter.length == 0) {\r\n          return;\r\n        } else {\r\n          level1.push(tagFilter[0].level1);\r\n          this.templevel1Arryay.push({\r\n            ledgerid: x.ledgerid,\r\n            level1: this.level1Names,\r\n          });\r\n        }\r\n\r\n        if (level1.length > 0) {\r\n          let level2 = [];\r\n          this.templevel1Arryay.push({ ledgerid: x.ledgerid, level1: level1 });\r\n          var tag2Filter = tagFilter.filter((row) => row.level1 == x.level1);\r\n          if (tag2Filter.length != 0) {\r\n            tag2Filter[0].level2.forEach((element) => {\r\n              level2.push(element.level2name);\r\n            });\r\n            if (level2.length > 0) {\r\n              let level3 = [];\r\n              this.templevel2Arryay.push({\r\n                ledgerid: x.ledgerid,\r\n                level2: level2,\r\n              });\r\n              var tag3Filter = tag2Filter[0].level2.filter(\r\n                (row) => row.level2name == x.level2\r\n              );\r\n              if (tag3Filter.length != 0) {\r\n                tag3Filter[0].level3.forEach((element) => {\r\n                  level3.push(element);\r\n                });\r\n              }\r\n              if (level3.length > 0) {\r\n                this.templevel3Arryay.push({\r\n                  ledgerid: x.ledgerid,\r\n                  level3: level3,\r\n                });\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    },\r\n    async applyLevel1BulkTags() {\r\n      this.rowData = this.rowData.map((val) => {\r\n        if (val.selected == true) {\r\n          val[\"level1\"] = this.dialogL1Value;\r\n          val[\"level2\"] = this.dialogL2Value;\r\n          val[\"level3\"] = \"\";\r\n          val[\"level2Options\"] = [];\r\n          val.level3Options = [];\r\n          val.level2Options = this.l2Options[val[\"level1\"]];\r\n          if (val.level2Options)\r\n            val.level3Options = this.l3Options[val[\"level1\"]][val[\"level2\"]];\r\n          \r\n          let index = this.$_.findLastIndex(this.orginalTaggingtreeData, {\r\n            name: val.name,\r\n            parent: val.parent,\r\n          });\r\n          if(this.orginalTaggingtreeData[index]){\r\n          this.orginalTaggingtreeData[index][\"level1\"] = val[\"level1\"];\r\n          this.orginalTaggingtreeData[index][\"level2\"] = val[\"level2\"];\r\n          this.orginalTaggingtreeData[index][\"level3\"] = val[\"level3\"];\r\n          }\r\n          var rowNode = this.gridApi.getRowNode(val.parent+val.name);\r\n          rowNode.setDataValue(\"level1\", val[\"level1\"]);\r\n          rowNode.setDataValue(\"level2\", val[\"level2\"]);\r\n          rowNode.setDataValue(\"level3\", val[\"level3\"]);\r\n          this.updateUnsavedValues(val.parent,val.name,index);   \r\n          val.selected = false;       \r\n        }\r\n        return val;\r\n      });\r\n      this.checkBoxValue = false;\r\n      this.bulkTagLevel1Enabled = false;\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped  >\r\n@import \"../assets/css/tagging.css\";\r\n/* @import \"../node_modules/ag-grid-community/dist/styles/ag-grid.css\"; */\r\n  /* @import \"../node_modules/ag-grid-community/dist/styles/ag-theme-alpine.css\"; */\r\n.tdNameClass {\r\n  max-width: 150px;\r\n}\r\n</style>\r\n<style  scoped>\r\n\r\n/deep/ .v-select > .v-input__control{\r\n  min-height: 38px;\r\n}\r\n/* to remove the box shadow of drop down in AE dialog */\r\n/deep/ .v-select > .v-input__control > .v-input__slot{\r\n  box-shadow: none !important;\r\n}\r\n\r\n/deep/ .header{\r\n  font-size: 17px !important;\r\n    font-weight: 600 !important;\r\n    letter-spacing: 1px !important;\r\n}\r\n\r\n/deep/ .primaryColor{\r\n  color:#03a9f4 !important;\r\n}\r\n* {\r\n  /* font-family: \"Be Vietnam\" !important; */\r\n  font-family: Be Vietnam, Helvetica, Arial, sans-serif !important;\r\n  font-size: 14px !important;\r\n}\r\n/* ::v-deep/ .table > tbody > tr > td { */\r\n/deep/ .table > tbody > tr > td {\r\n  /* height: 10px !important;\r\n  max-width: 300px; */\r\n  text-transform: capitalize;\r\n  font-size: 14px;\r\n}\r\n\r\n/deep/ thead {\r\n  border-bottom: 4px solid #03a9f4;\r\n}\r\n/deep/ .table > tbody > tr > th {\r\n  /* height: 10px !important;\r\n  max-width: 300px; */\r\n  font-size: 14px;\r\n}\r\n\r\ndiv {\r\n  font-size: 14px;\r\n}\r\n/deep/ .table {\r\n  width: auto;\r\n  border-collapse: collapse;\r\n}\r\n/deep/.v-list-item {\r\n  cursor: pointer;\r\n}\r\n\r\n.textColor {\r\n  color: #494949 !important;\r\n}\r\n/deep/ p {\r\n  color: #494949;\r\n}\r\n.vertical-center {\r\n  align-items: center;\r\n}\r\n[role=\"columnheader\"] {\r\n  border: 1px solid black;\r\n  background: rgba(48, 96, 144, 0.2);\r\n  /* CSS goes here */\r\n}\r\n.formRow {\r\n  padding: 5px;\r\n  margin: 2px;\r\n}\r\n.btnRow {\r\n  display: flex;\r\n  /* width: 100px; */\r\n  min-width: 2.5vw;\r\n}\r\n/deep/ th > .text-dark {\r\n  padding: 0px;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n}\r\n.text-dark {\r\n  margin-bottom: 10px;\r\n  margin-top: 10px;\r\n  padding-bottom: 10px;\r\n  font-size: 14px;\r\n}\r\n/deep/.v-select__slot {\r\n  font-size: 14px !important;\r\n}\r\n.upTab {\r\n  margin: 5px;\r\n  border: 1px solid black;\r\n}\r\n.companyHeader {\r\n  margin-top: 10px;\r\n  font-size: 18px;\r\n}\r\n.uploadBtn {\r\n  margin: 0px;\r\n  padding: 0px;\r\n}\r\n.text-left {\r\n  text-align: left;\r\n}\r\n\r\n.table-borderless {\r\n  overflow-y: auto;\r\n}\r\n.table-borderless > tbody > tr > td,\r\n.table-borderless > tbody > tr > th,\r\n.table-borderless > tfoot > tr > td,\r\n.table-borderless > tfoot > tr > th,\r\n.table-borderless > thead > tr > td,\r\n.table-borderless > thead > tr > th {\r\n  border: none;\r\n  text-align: left;\r\n  float: left;\r\n  /* height: 10px !important; */\r\n}\r\n.LabelText {\r\n  text-decoration: bold;\r\n  font-size: 18px;\r\n  margin-top: 10px;\r\n}\r\n.main-wrapper {\r\n  float: left;\r\n  align-items: left;\r\n  display: block;\r\n  font-size: 14px;\r\n  font-weight: 540;\r\n  width: 100%;\r\n}\r\n.tableMainTdClass {\r\n  max-width: 150px !important;\r\n}\r\n.buttonDiv {\r\n  align-items: flex-end;\r\n}\r\n.maxCol {\r\n  max-width: 250px;\r\n}\r\n.test {\r\n  border-width: 2px !important;\r\n  border-color: #cdcdcd !important;\r\n  height: 100%;\r\n}\r\n\r\nbody,\r\n.container,\r\nhtml {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.blueUline {\r\n  width: 100%;\r\n  text-align: start;\r\n}\r\n.loginText {\r\n  font-size: 21px;\r\n  font-weight: 300;\r\n  /* line-height: 75px; */\r\n  /* margin-top:10px; */\r\n\r\n  color: rgb(0, 107, 106);\r\n  text-decoration: \"none\";\r\n  font-family: \"Roboto\";\r\n  text-align: left;\r\n  letter-spacing: 0.2;\r\n  margin-left: 15px;\r\n}\r\n\r\n.companyHeaderNew {\r\n  margin: 5px !important;\r\n  margin-top: 0px !important;\r\n  font-size: 15px !important;\r\n  max-height: 52px !important;\r\n  justify-content: flex-start;\r\n  align-items: center !important;\r\n}\r\n\r\n.tabelHeader {\r\n  color: red !important;\r\n}\r\n\r\n.btSty {\r\n  height: 10px;\r\n}\r\n\r\n.childStyle {\r\n  margin-left: 20px;\r\n}\r\n\r\n.parentStyle {\r\n  font-weight: 600;\r\n}\r\n\r\n.bluk1Dia {\r\n  height: 40vh;\r\n  font-size: 16px;\r\n}\r\n\r\n.alertStyle {\r\n  height: auto;\r\n  padding-bottom: 0px;\r\n  font-size: 16px;\r\n}\r\n.alertDivider {\r\n  height: 2px;\r\n  background-color: #03a9f4;\r\n  color: #03a9f4;\r\n  border: 1px solid;\r\n  margin-bottom: 24px;\r\n}\r\n.actionStyle {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n/deep/ .v-subheader {\r\n  font-size: 14px !important;\r\n  font-weight: 600 !important;\r\n  margin-left: 8px !important;\r\n}\r\n.cursorPointer {\r\n  cursor: pointer;\r\n}\r\n\r\n.selectBackgroundStyle {\r\n  color: white;\r\n  background-color: #03a9f4;\r\n}\r\n\r\n/deep/ .v-chip-group .v-chip--active {\r\n  color: white !important;\r\n  background-color: #03a9f4 !important;\r\n}\r\n\r\n.displayValid {\r\n  display: flex !important;\r\n}\r\n\r\n.filterChildStyle {\r\n  margin-left: 10px;\r\n  color: grey;\r\n}\r\n\r\n.whiteBg {\r\n  background-color: white;\r\n}\r\n\r\n.hrstyle {\r\n  width: 110%;\r\n  position: relative;\r\n  height: 4px;\r\n  background-color: #03a9f4;\r\n  margin: 5px 0px;\r\n  left: -10px;\r\n  border: 1px solid #03a9f4;\r\n}\r\n\r\n/deep/ button {\r\n  font-size: 12px;\r\n}\r\n\r\n/deep/ .noHover .v-btn__content {\r\n  background-color: #fff !important;\r\n}\r\n\r\n/deep/.v-list-item {\r\n  min-height: 35px !important;\r\n  font-size: 14px !important;\r\n  text-align: start;\r\n}\r\n\r\n.onHover:hover {\r\n  background-color: #f5f4f47d;\r\n}\r\n/deep/ .v-list-item__title {\r\n  font-size: 14px !important;\r\n}\r\n\r\n/deep/ .v-btn__content {\r\n  letter-spacing: normal !important;\r\n}\r\n\r\n/deep/.searchStyleP\r\n  > .v-text-field--outlined.v-input--dense.v-text-field--outlined\r\n  > .v-input__control\r\n  > .v-input__slot {\r\n  min-height: 32px !important;\r\n}\r\n\r\n/deep/ .searchStyle .v-input__append-inner {\r\n  margin-top: 4.5px !important;\r\n}\r\n\r\n/deep/ input {\r\n  font-size: 14px !important;\r\n}\r\n\r\n /deep/ .v-text-field--outlined.v-input--is-focused fieldset,\r\n.v-text-field--outlined.v-input--has-state fieldset {\r\n  border: 1px solid grey !important;\r\n}\r\n\r\n/deep/\r\n  .ag-cell >.main-wrapper>.v-text-field--outlined.v-input--dense.v-text-field--single-line\r\n  > .v-input__control\r\n  > .v-input__slot,\r\n.ag-cell >.main-wrapper>.v-text-field--outlined.v-input--dense.v-text-field--outlined\r\n  > .v-input__control\r\n  > .v-input__slot {\r\n  min-height: 32px !important;\r\n  margin-top: 5px !important;\r\n  width: 100%;\r\n}\r\n\r\n/deep/.ag-theme-material .ag-ltr .ag-cell {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n/deep/.v-sheet.v-list {\r\n  font-size: 14px !important;\r\n  max-width: 22vw;\r\n}\r\n\r\n/deep/.v-list.v-sheet {\r\n  font-size: 14px !important;\r\n  max-width: 22vw;\r\n}\r\n\r\n/deep/.v-autocomplete__content.v-menu__content .v-select-list {\r\n  font-size: 14px !important;\r\n  background-color: #fff;\r\n}\r\n\r\n/deep/.v-list {\r\n  max-width: 22vw !important;\r\n}\r\n\r\n.col {\r\n  font-size: 14px !important;\r\n}\r\n\r\n.saveMargin {\r\n  margin-top: 5px !important;\r\n}\r\n\r\n.parentLedgerType {\r\n  display: flex !important;\r\n}\r\n.parentLedgerWidth {\r\n  max-width: 85% !important;\r\n  min-width: 85% !important;\r\n  min-height: 37px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.childLedgerWidth {\r\n  max-width: 85% !important;\r\n}\r\n\r\n.ledgerViweTbHg {\r\n  min-height: 69.5vh !important;\r\n}\r\n\r\n/deep/ .v-input .v-label {\r\n  font-size: 14px !important;\r\n}\r\n\r\n/deep/\r\n  #app\r\n  > div.v-menu__content.theme--light.menuable__content__active.v-autocomplete__content {\r\n  max-width: 22vw !important;\r\n  background-color: #fff;\r\n\r\n}\r\n\r\n/deep/ .v-menu__content {\r\n    background-color: #fff;\r\n}\r\n\r\n.cardStyle{\r\n  border: 1px solid white ;\r\n  box-shadow: 0 3px 10px rgb(0 0 0 / 0.2);\r\n}\r\n/deep/ .ag-theme-material .ag-row{\r\n  border: 0px !important;\r\n  font-size: 14px !important;\r\n  text-align: start;\r\n}\r\n\r\n/deep/ .ag-theme-material .ag-header-row{\r\nborder-bottom: 5px solid #03a9f4 !important;\r\ntext-transform: capitalize;\r\nfont-size: 14px !important;\r\ntext-align: start;\r\n}\r\n\r\n/deep/ .aeDialogStyle{\r\n  height:75vh !important;\r\n}\r\n/deep/ .aeAddDialogStyle{\r\n  height:70vh !important;\r\n  }\r\n\r\n  /deep/ .commentStyle{\r\n    height:100px !important;\r\n  }\r\n  \r\n  /deep/.commentStyle>div>div{\r\n    display: block;\r\n  }\r\n</style>\r\n\r\n"],"sourceRoot":"src/components"}]}