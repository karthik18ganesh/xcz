{"remainingRequest":"C:\\Users\\18kar\\Desktop\\FE bugs\\shan\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\18kar\\Desktop\\FE bugs\\shan\\front_end\\src\\components\\financialCommentComponent.vue?vue&type=style&index=0&id=5c0a54a7&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\18kar\\Desktop\\FE bugs\\shan\\front_end\\src\\components\\financialCommentComponent.vue","mtime":1634868300944},{"path":"C:\\Users\\18kar\\Desktop\\FE bugs\\shan\\front_end\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\18kar\\Desktop\\FE bugs\\shan\\front_end\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\18kar\\Desktop\\FE bugs\\shan\\front_end\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\18kar\\Desktop\\FE bugs\\shan\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\18kar\\Desktop\\FE bugs\\shan\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9QmUrVmlldG5hbSZkaXNwbGF5PXN3YXAnKTsNCi5jb250YWluZXJDbGFzc3sNCiAgICB0ZXh0LWFsaWduOiBsZWZ0Ow0KICAgIG1hcmdpbi10b3A6IDE1cHg7DQp9DQouZGl2LWJ0bnsNCiAgICB0ZXh0LWFsaWduOiByaWdodDsNCiAgICBwYWRkaW5nOiAxMHB4Ow0KICAgIG1hcmdpbjogNXB4Ow0KICAgIHBhZGRpbmctYm90dG9tOiAzJTsNCiAgICBwYWRkaW5nLXJpZ2h0OiAyJTsNCiAgICANCn0NCi5ibHVlVWxpbmV7DQogICAgd2lkdGg6MTAwJTsNCiAgICBib3JkZXItYm90dG9tOiAzcHggc29saWQgcmdiYSgzLCAxNjksIDI0NCwgMSk7DQp9DQouaW5saW5lew0KICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgICBmbGV4OiAyMHB4Ow0KfQ0KYnV0dG9uew0KICAgIHBhZGRpbmc6IDVweDsNCn0NCmg1ew0KICAgIHBhZGRpbmctdG9wOiAzJTsNCiAgICBwYWRkaW5nLWxlZnQ6IDIlOw0KICAgIGZvbnQtc2l6ZTogMjJweDsNCiAgICBmb250LXdlaWdodDogNzAwOw0KICAgIHRleHQtYWxpZ246IGp1c3RpZnk7DQp9DQpzcGFuew0KICAgIGZvbnQ6ICdSb2JvdG8nOw0KICAgIGZvbnQtc2l6ZTogMTZweDsNCn0NCg=="},{"version":3,"sources":["financialCommentComponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"financialCommentComponent.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div>\r\n        <v-dialog\r\n            persistent\r\n            width=\"800\"\r\n            v-model=\"commentDialogList\"\r\n            >\r\n                <template v-slot:activator=\"{ on, attrs }\">\r\n                    <p\r\n                    color=\"primary\"\r\n                    dark\r\n                    v-bind=\"attrs\"\r\n                    v-on=\"on\"\r\n                    >\r\n                    <button transparent  v-bind=\"attrs\" v-on=\"on\"><v-icon small dense> far fa-comment-dots </v-icon></button>\r\n                    </p>\r\n                </template>\r\n            <v-card class=\"mx-auto\" width=\"800\">\r\n                <v-toolbar dense flat>\r\n                    <h5>Cash on hand</h5>\r\n\r\n                    <v-spacer></v-spacer>\r\n\r\n                    <!-- <AddComment></AddComment> -->\r\n\r\n                    <!--========== Add Comment ============= -->\r\n\r\n                    <v-dialog\r\n                    persistent\r\n                    width=\"800\"\r\n                    v-model=\"commentDialog\"\r\n                    >\r\n                        <template v-slot:activator=\"{ on, attrs }\">\r\n                            <button style=\"color: rgba(3, 169, 244, 1);\" v-on=\"on\" v-bind=\"attrs\" @click=\"addCommentFunction\">\r\n                            <img src=\"../assets/plus.png\" alt=\"\">\r\n                                Add Comments\r\n                            </button>\r\n                        </template>\r\n                        <v-card class=\"mx-auto\" width=\"800\">\r\n                            <v-toolbar dense flat>\r\n                                <h5>Cash on hand</h5>\r\n\r\n                                <v-spacer></v-spacer>\r\n\r\n                                <button style=\"color: rgba(3, 169, 244, 1);\" @click=\"commentDialog=false\">\r\n                                    <v-icon dense> fas fa-long-arrow-alt-left</v-icon>\r\n                                        Back\r\n                                </button>\r\n                                \r\n                                <v-btn small \r\n                                :disabled=\"comments1 ? false : true\" @click=\"resolve\"\r\n                                :color=\"isResolve ? 'success' : 'primary'\" style=\"margin-left:5px; margin-right:5px\">Resolve </v-btn>\r\n                                <v-icon small v-if=\"isResolve\" :color=\"isResolve ? 'success' : ''\"> fas fa-check-circle</v-icon>\r\n                            </v-toolbar>\r\n\r\n                            <v-divider class=\"blueUline\"></v-divider>\r\n\r\n                            <v-container style=\"text-align:left\">\r\n                                <div v-if=\"comments1\">\r\n                                    <div style=\"margin-left:5%; margin-right:5%; margin-top:0%\">\r\n                                        <v-avatar color=\"#FFDCBB\" size=\"38\">\r\n                                            <span style=\"color: #000000\">CS</span>\r\n                                        </v-avatar> \r\n                                        <span style=\"padding: 3px\">{{ comments1 }}</span>\r\n                                    </div>\r\n\r\n                                    <v-divider></v-divider>\r\n                                    </div>\r\n\r\n                                <div>\r\n                                                            \r\n                                    <div v-if=\"!comments1\" style=\"margin:10px;margin-left:10%\">\r\n                                        <v-avatar color=\"#FFDCBB\" size=\"38\">\r\n                                            <span style=\"color: #000000\">CS</span>\r\n                                        </v-avatar> \r\n                                        <span style=\"padding: 3px\">Chandra Shekar</span>\r\n\r\n                                        <v-textarea\r\n                                        outlined\r\n                                        dense\r\n                                        v-model=\"comments\"\r\n                                        placeholder=\"Comment Here...\"\r\n                                        style=\"margin-top:2%; margin-right:10%\"></v-textarea>\r\n                                    </div>\r\n\r\n                                    <div style=\"margin-left:10%; margin-right:10%; margin-top:0%;\" v-for=\"data in allComments\" v-bind:key=\"data.id\">\r\n                                        <div style=\"padding: 3px\">\r\n                                            <v-avatar color=\"#FFDCBB\" size=\"38\" style=\"padding-right:3px\">\r\n                                                <span style=\"color: #000000; padding-left:3px\"> {{ data.username ? data.username[0] : data.userName[0] }} </span>\r\n                                            </v-avatar>\r\n                                            <span>{{ data.userName ? data.userName : data.username }}</span> <span style=\"color:#404040; font-size: 13px\">{{ moment().diff(moment(Number(data.createdat)),\"minutes\") }} mins ago</span>\r\n                                        </div>\r\n                                        <div style=\"margin-left:7%;margin-top:3px; margin-bottom:1%\">\r\n                                            <span style=\"padding: 3px\">{{ data.comment }}</span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div style=\"margin:10px;margin-left:10%;\" v-if=\"comments1 && !isResolve\">                                       \r\n                                        <v-text-field\r\n                                        v-model=\"reply\"\r\n                                        dense\r\n                                        outlined \r\n                                        placeholder=\"Reply...\"\r\n                                        style=\"margin-top:2%; margin-right:10%\"></v-text-field>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style=\"text-align:right;margin-right:10%\" v-if=\"!isResolve\">\r\n                                    <v-btn small color=\"primary\" style=\"margin-right:2%\" @click=\"submitComment\"> Post </v-btn>\r\n                                    <v-btn small @click=\"reply=''\"> Cancel </v-btn>\r\n                                </div>\r\n\r\n                                <div v-if=\"isResolve\" style=\"text-align:center\">\r\n                                    <v-btn small color=\"primary\" @click=\"reopenResolve\">Re-open</v-btn>\r\n                                </div>\r\n                            </v-container>\r\n                        </v-card>\r\n                    </v-dialog>\r\n                    <!--==================================== -->\r\n\r\n                    <button transparent @click=\"commentDialogList = false\">\r\n                        <img src=\"../assets/closeicon.png\" height=\"35\" style=\"right:0%\">\r\n                    </button>\r\n                </v-toolbar>\r\n\r\n                <v-divider class=\"blueUline\"></v-divider>\r\n\r\n                <v-container style=\"text-align:left\">\r\n                    <v-simple-table>\r\n                        <thead style=\"border-bottom:1px solid #8A8A8A; text-align:left\">\r\n                            <tr>\r\n                                <td style=\"font-size: 15px; color: #03A9F4\">Sl.no</td>\r\n                                <td style=\"font-size: 15px; color: #03A9F4\">Comment Thread</td>\r\n                                <td style=\"text-align:left\"></td>\r\n                                <td style=\"text-align:left\"></td>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody v-for=\"item in commentList\" v-bind:key=\"item.id\">\r\n                            <tr>\r\n                                <td style=\"text-align:left\">{{ item.slno}} </td>\r\n                                <td style=\"text-align:left;\" @click=\"rowClick(item)\"> {{ item.thread.substring(0,14)+ \"...\"}} </td>\r\n                                <td style=\"text-align:right;\">\r\n                                    <button transparent style=\"padding:5px\">\r\n                                        <v-icon small :color=\"item.isresolved ? 'success' : 'orange'\">{{item.isresolved ? 'fas fa-check-circle' : 'fas fa-clock'}} </v-icon>\r\n                                    </button>\r\n                                </td>\r\n                                <td style=\"text-align:left;\">\r\n                                    <button transparent style=\"padding:5px\" @click=\"deleteComment(item.id)\"><img src=\"../assets/delete.png\" alt=\"\"></button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </v-simple-table>\r\n                </v-container>\r\n            </v-card>\r\n        </v-dialog>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n//import AddComment from './CommentScreen.vue'\r\nimport moment from \"moment\";\r\nexport default {\r\n    components:{\r\n        //AddComment\r\n        /* eslint-disable vue/no-unused-components */\r\n    },\r\n    mounted(){\r\n        console.log(moment)\r\n        this.getCommentList()  \r\n    },\r\n    data(){\r\n        return{\r\n            commentDialog: false,\r\n            commentDialogList: false,\r\n            addDisclosureDialog: false,\r\n\r\n            comments: '',\r\n            comments1: '',\r\n            reply: '',\r\n            post: false,\r\n            addComment : false,\r\n            isResolve: false,\r\n\r\n            commentList: [],\r\n            allComments: []\r\n        }\r\n    },\r\n    methods: {\r\n        addComments(){\r\n            this.addComment = true\r\n        },\r\n        addCommentFunction(){\r\n            this.comments1 = ''\r\n            this.allComments = []\r\n            this.comments = ''\r\n        },\r\n        async resolve(){\r\n            try{\r\n                var resolve_update = {\r\n                    \"threadId\": this.selectedRow.id,\r\n                    \"level\":2,\r\n                    \"isResolved\":true\r\n                }\r\n                const resolveRes = await this.$apiService.put(\"/financial/threads/level\",resolve_update);\r\n                console.log(resolveRes)\r\n                if(resolveRes.status === 200){\r\n                    this.isResolve = true\r\n                }\r\n                this.getCommentList()\r\n            }\r\n            catch(error){\r\n                console.log(error)\r\n            }\r\n        },\r\n        async reopenResolve(){\r\n            try{\r\n                var reopen_update = {\r\n                    \"threadId\": this.selectedRow.id,\r\n                    \"level\":2,\r\n                    \"isResolved\": false\r\n                }\r\n                const reopenRes = await this.$apiService.put(\"/financial/threads/level\",reopen_update)\r\n                console.log(reopenRes)\r\n                if(reopenRes.status === 200){\r\n                    this.isResolve = false\r\n                }\r\n                this.getCommentList()\r\n            }\r\n            catch(error){\r\n                console.log(error)\r\n            }\r\n        },\r\n        async submitComment() {\r\n            try{\r\n                this.isResolve = false\r\n                if(this.comments1){\r\n                    var reply_payload={\r\n                    \"userId\":10002,\r\n                    \"userName\":\"vivek\",\r\n                    \"threadId\":this.selectedRow.id,\r\n                    \"level\":2,\r\n                    \"comment\": this.reply,\r\n                    \"createdat\": moment().valueOf()\r\n                }\r\n                const result = await this.$apiService.post(\"/financial/comments\",reply_payload)\r\n                console.log(result)\r\n                this.allComments.push(reply_payload)\r\n                this.reply = ''\r\n                }\r\n                else{\r\n                    var payload = {\r\n                        \"financialId\":97,\r\n                        \"level1\":\"Cash and cash equivalents\",\r\n                        \"level2\":\"Cash on hands\",\r\n                        \"userId\":10001,\r\n                        \"userName\":\"Sharan\",\r\n                        \"thread\":this.comments\r\n                    }\r\n                    const result = await this.$apiService.post(\"/financial/threads/level2\",payload)\r\n                    console.log(result)\r\n                    this.comments1 = this.comments\r\n                    this.getCommentList()\r\n                }\r\n            }\r\n            catch(error){\r\n                console.log(error)\r\n            }\r\n            \r\n        },\r\n        async rowClick(item){\r\n            this.selectedRow = item\r\n            this.isResolve = this.selectedRow.isresolved\r\n            var res = await this.$apiService.get(`/financial/comments?threadId=${item.id}&level=2`)\r\n            this.allComments = res.data.data\r\n            console.log(\"Res => \",res)\r\n            this.comments1=item.thread\r\n            this.commentDialog= true\r\n        },\r\n        async getCommentList(){\r\n            try{\r\n                const commentResult = await this.$apiService.get(\"/financial/threads/level2?financialid=97&level1=Cash and cash equivalents&level2=Balance with banks\");\r\n                this.commentList = commentResult.data.data\r\n                console.log(\"Comment list =>\", commentResult.data.data)\r\n                this.commentList.forEach((x,index)=>{\r\n                    x.slno=index+1;\r\n                });\r\n            }\r\n            catch(error){\r\n                console.log(error)\r\n            }\r\n        },\r\n        async deleteComment(id){\r\n            var del = await this.$apiService.delete(\"/financial/threads/level?threadId=\"+id+\"&level=2\");\r\n            console.log(del)\r\n            this.commentList.splice(id,1)\r\n            this.getCommentList()\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n@import url('https://fonts.googleapis.com/css2?family=Be+Vietnam&display=swap');\r\n.containerClass{\r\n    text-align: left;\r\n    margin-top: 15px;\r\n}\r\n.div-btn{\r\n    text-align: right;\r\n    padding: 10px;\r\n    margin: 5px;\r\n    padding-bottom: 3%;\r\n    padding-right: 2%;\r\n    \r\n}\r\n.blueUline{\r\n    width:100%;\r\n    border-bottom: 3px solid rgba(3, 169, 244, 1);\r\n}\r\n.inline{\r\n    display: inline-block;\r\n    flex: 20px;\r\n}\r\nbutton{\r\n    padding: 5px;\r\n}\r\nh5{\r\n    padding-top: 3%;\r\n    padding-left: 2%;\r\n    font-size: 22px;\r\n    font-weight: 700;\r\n    text-align: justify;\r\n}\r\nspan{\r\n    font: 'Roboto';\r\n    font-size: 16px;\r\n}\r\n</style>"]}]}