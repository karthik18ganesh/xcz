{"remainingRequest":"C:\\Users\\18kar\\Desktop\\FE bugs\\shan\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\18kar\\Desktop\\FE bugs\\shan\\front_end\\src\\components\\financialCommentComponent.vue?vue&type=template&id=5c0a54a7&scoped=true&","dependencies":[{"path":"C:\\Users\\18kar\\Desktop\\FE bugs\\shan\\front_end\\src\\components\\financialCommentComponent.vue","mtime":1634868300944},{"path":"C:\\Users\\18kar\\Desktop\\FE bugs\\shan\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\18kar\\Desktop\\FE bugs\\shan\\front_end\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\18kar\\Desktop\\FE bugs\\shan\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\18kar\\Desktop\\FE bugs\\shan\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXY+CiAgICA8di1kaWFsb2cKICAgICAgICBwZXJzaXN0ZW50CiAgICAgICAgd2lkdGg9IjgwMCIKICAgICAgICB2LW1vZGVsPSJjb21tZW50RGlhbG9nTGlzdCIKICAgICAgICA+CiAgICAgICAgICAgIDx0ZW1wbGF0ZSB2LXNsb3Q6YWN0aXZhdG9yPSJ7IG9uLCBhdHRycyB9Ij4KICAgICAgICAgICAgICAgIDxwCiAgICAgICAgICAgICAgICBjb2xvcj0icHJpbWFyeSIKICAgICAgICAgICAgICAgIGRhcmsKICAgICAgICAgICAgICAgIHYtYmluZD0iYXR0cnMiCiAgICAgICAgICAgICAgICB2LW9uPSJvbiIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDxidXR0b24gdHJhbnNwYXJlbnQgIHYtYmluZD0iYXR0cnMiIHYtb249Im9uIj48di1pY29uIHNtYWxsIGRlbnNlPiBmYXIgZmEtY29tbWVudC1kb3RzIDwvdi1pY29uPjwvYnV0dG9uPgogICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgIDx2LWNhcmQgY2xhc3M9Im14LWF1dG8iIHdpZHRoPSI4MDAiPgogICAgICAgICAgICA8di10b29sYmFyIGRlbnNlIGZsYXQ+CiAgICAgICAgICAgICAgICA8aDU+Q2FzaCBvbiBoYW5kPC9oNT4KCiAgICAgICAgICAgICAgICA8di1zcGFjZXI+PC92LXNwYWNlcj4KCiAgICAgICAgICAgICAgICA8IS0tIDxBZGRDb21tZW50PjwvQWRkQ29tbWVudD4gLS0+CgogICAgICAgICAgICAgICAgPCEtLT09PT09PT09PT0gQWRkIENvbW1lbnQgPT09PT09PT09PT09PSAtLT4KCiAgICAgICAgICAgICAgICA8di1kaWFsb2cKICAgICAgICAgICAgICAgIHBlcnNpc3RlbnQKICAgICAgICAgICAgICAgIHdpZHRoPSI4MDAiCiAgICAgICAgICAgICAgICB2LW1vZGVsPSJjb21tZW50RGlhbG9nIgogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSB2LXNsb3Q6YWN0aXZhdG9yPSJ7IG9uLCBhdHRycyB9Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBzdHlsZT0iY29sb3I6IHJnYmEoMywgMTY5LCAyNDQsIDEpOyIgdi1vbj0ib24iIHYtYmluZD0iYXR0cnMiIEBjbGljaz0iYWRkQ29tbWVudEZ1bmN0aW9uIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Ii4uL2Fzc2V0cy9wbHVzLnBuZyIgYWx0PSIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgQWRkIENvbW1lbnRzCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgICAgICAgPHYtY2FyZCBjbGFzcz0ibXgtYXV0byIgd2lkdGg9IjgwMCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRvb2xiYXIgZGVuc2UgZmxhdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNT5DYXNoIG9uIGhhbmQ8L2g1PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXNwYWNlcj48L3Ytc3BhY2VyPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gc3R5bGU9ImNvbG9yOiByZ2JhKDMsIDE2OSwgMjQ0LCAxKTsiIEBjbGljaz0iY29tbWVudERpYWxvZz1mYWxzZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtaWNvbiBkZW5zZT4gZmFzIGZhLWxvbmctYXJyb3ctYWx0LWxlZnQ8L3YtaWNvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQmFjawogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWJ0biBzbWFsbCAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDpkaXNhYmxlZD0iY29tbWVudHMxID8gZmFsc2UgOiB0cnVlIiBAY2xpY2s9InJlc29sdmUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6Y29sb3I9ImlzUmVzb2x2ZSA/ICdzdWNjZXNzJyA6ICdwcmltYXJ5JyIgc3R5bGU9Im1hcmdpbi1sZWZ0OjVweDsgbWFyZ2luLXJpZ2h0OjVweCI+UmVzb2x2ZSA8L3YtYnRuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtaWNvbiBzbWFsbCB2LWlmPSJpc1Jlc29sdmUiIDpjb2xvcj0iaXNSZXNvbHZlID8gJ3N1Y2Nlc3MnIDogJyciPiBmYXMgZmEtY2hlY2stY2lyY2xlPC92LWljb24+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdi10b29sYmFyPgoKICAgICAgICAgICAgICAgICAgICAgICAgPHYtZGl2aWRlciBjbGFzcz0iYmx1ZVVsaW5lIj48L3YtZGl2aWRlcj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNvbnRhaW5lciBzdHlsZT0idGV4dC1hbGlnbjpsZWZ0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgdi1pZj0iY29tbWVudHMxIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW4tbGVmdDo1JTsgbWFyZ2luLXJpZ2h0OjUlOyBtYXJnaW4tdG9wOjAlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtYXZhdGFyIGNvbG9yPSIjRkZEQ0JCIiBzaXplPSIzOCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDAiPkNTPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtYXZhdGFyPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9InBhZGRpbmc6IDNweCI+e3sgY29tbWVudHMxIH19PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1kaXZpZGVyPjwvdi1kaXZpZGVyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiB2LWlmPSIhY29tbWVudHMxIiBzdHlsZT0ibWFyZ2luOjEwcHg7bWFyZ2luLWxlZnQ6MTAlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtYXZhdGFyIGNvbG9yPSIjRkZEQ0JCIiBzaXplPSIzOCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDAiPkNTPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtYXZhdGFyPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9InBhZGRpbmc6IDNweCI+Q2hhbmRyYSBTaGVrYXI8L3NwYW4+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0YXJlYQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdXRsaW5lZAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZW5zZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJjb21tZW50cyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IkNvbW1lbnQgSGVyZS4uLiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9Im1hcmdpbi10b3A6MiU7IG1hcmdpbi1yaWdodDoxMCUiPjwvdi10ZXh0YXJlYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luLWxlZnQ6MTAlOyBtYXJnaW4tcmlnaHQ6MTAlOyBtYXJnaW4tdG9wOjAlOyIgdi1mb3I9ImRhdGEgaW4gYWxsQ29tbWVudHMiIHYtYmluZDprZXk9ImRhdGEuaWQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJwYWRkaW5nOiAzcHgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtYXZhdGFyIGNvbG9yPSIjRkZEQ0JCIiBzaXplPSIzOCIgc3R5bGU9InBhZGRpbmctcmlnaHQ6M3B4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7IHBhZGRpbmctbGVmdDozcHgiPiB7eyBkYXRhLnVzZXJuYW1lID8gZGF0YS51c2VybmFtZVswXSA6IGRhdGEudXNlck5hbWVbMF0gfX0gPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWF2YXRhcj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPnt7IGRhdGEudXNlck5hbWUgPyBkYXRhLnVzZXJOYW1lIDogZGF0YS51c2VybmFtZSB9fTwvc3Bhbj4gPHNwYW4gc3R5bGU9ImNvbG9yOiM0MDQwNDA7IGZvbnQtc2l6ZTogMTNweCI+e3sgbW9tZW50KCkuZGlmZihtb21lbnQoTnVtYmVyKGRhdGEuY3JlYXRlZGF0KSksIm1pbnV0ZXMiKSB9fSBtaW5zIGFnbzwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbi1sZWZ0OjclO21hcmdpbi10b3A6M3B4OyBtYXJnaW4tYm90dG9tOjElIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJwYWRkaW5nOiAzcHgiPnt7IGRhdGEuY29tbWVudCB9fTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbjoxMHB4O21hcmdpbi1sZWZ0OjEwJTsiIHYtaWY9ImNvbW1lbnRzMSAmJiAhaXNSZXNvbHZlIj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJyZXBseSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVuc2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3V0bGluZWQgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJSZXBseS4uLiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9Im1hcmdpbi10b3A6MiU7IG1hcmdpbi1yaWdodDoxMCUiPjwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9InRleHQtYWxpZ246cmlnaHQ7bWFyZ2luLXJpZ2h0OjEwJSIgdi1pZj0iIWlzUmVzb2x2ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtYnRuIHNtYWxsIGNvbG9yPSJwcmltYXJ5IiBzdHlsZT0ibWFyZ2luLXJpZ2h0OjIlIiBAY2xpY2s9InN1Ym1pdENvbW1lbnQiPiBQb3N0IDwvdi1idG4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtYnRuIHNtYWxsIEBjbGljaz0icmVwbHk9JyciPiBDYW5jZWwgPC92LWJ0bj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgdi1pZj0iaXNSZXNvbHZlIiBzdHlsZT0idGV4dC1hbGlnbjpjZW50ZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWJ0biBzbWFsbCBjb2xvcj0icHJpbWFyeSIgQGNsaWNrPSJyZW9wZW5SZXNvbHZlIj5SZS1vcGVuPC92LWJ0bj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L3YtY29udGFpbmVyPgogICAgICAgICAgICAgICAgICAgIDwvdi1jYXJkPgogICAgICAgICAgICAgICAgPC92LWRpYWxvZz4KICAgICAgICAgICAgICAgIDwhLS09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gLS0+CgogICAgICAgICAgICAgICAgPGJ1dHRvbiB0cmFuc3BhcmVudCBAY2xpY2s9ImNvbW1lbnREaWFsb2dMaXN0ID0gZmFsc2UiPgogICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSIuLi9hc3NldHMvY2xvc2VpY29uLnBuZyIgaGVpZ2h0PSIzNSIgc3R5bGU9InJpZ2h0OjAlIj4KICAgICAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICA8L3YtdG9vbGJhcj4KCiAgICAgICAgICAgIDx2LWRpdmlkZXIgY2xhc3M9ImJsdWVVbGluZSI+PC92LWRpdmlkZXI+CgogICAgICAgICAgICA8di1jb250YWluZXIgc3R5bGU9InRleHQtYWxpZ246bGVmdCI+CiAgICAgICAgICAgICAgICA8di1zaW1wbGUtdGFibGU+CiAgICAgICAgICAgICAgICAgICAgPHRoZWFkIHN0eWxlPSJib3JkZXItYm90dG9tOjFweCBzb2xpZCAjOEE4QThBOyB0ZXh0LWFsaWduOmxlZnQiPgogICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9ImZvbnQtc2l6ZTogMTVweDsgY29sb3I6ICMwM0E5RjQiPlNsLm5vPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0iZm9udC1zaXplOiAxNXB4OyBjb2xvcjogIzAzQTlGNCI+Q29tbWVudCBUaHJlYWQ8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOmxlZnQiPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246bGVmdCI+PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8L3RoZWFkPgoKICAgICAgICAgICAgICAgICAgICA8dGJvZHkgdi1mb3I9Iml0ZW0gaW4gY29tbWVudExpc3QiIHYtYmluZDprZXk9Iml0ZW0uaWQiPgogICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246bGVmdCI+e3sgaXRlbS5zbG5vfX0gPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjpsZWZ0OyIgQGNsaWNrPSJyb3dDbGljayhpdGVtKSI+IHt7IGl0ZW0udGhyZWFkLnN1YnN0cmluZygwLDE0KSsgIi4uLiJ9fSA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOnJpZ2h0OyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0cmFuc3BhcmVudCBzdHlsZT0icGFkZGluZzo1cHgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1pY29uIHNtYWxsIDpjb2xvcj0iaXRlbS5pc3Jlc29sdmVkID8gJ3N1Y2Nlc3MnIDogJ29yYW5nZSciPnt7aXRlbS5pc3Jlc29sdmVkID8gJ2ZhcyBmYS1jaGVjay1jaXJjbGUnIDogJ2ZhcyBmYS1jbG9jayd9fSA8L3YtaWNvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246bGVmdDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHJhbnNwYXJlbnQgc3R5bGU9InBhZGRpbmc6NXB4IiBAY2xpY2s9ImRlbGV0ZUNvbW1lbnQoaXRlbS5pZCkiPjxpbWcgc3JjPSIuLi9hc3NldHMvZGVsZXRlLnBuZyIgYWx0PSIiPjwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PgogICAgICAgICAgICAgICAgPC92LXNpbXBsZS10YWJsZT4KICAgICAgICAgICAgPC92LWNvbnRhaW5lcj4KICAgICAgICA8L3YtY2FyZD4KICAgIDwvdi1kaWFsb2c+CjwvZGl2Pgo="},null]}