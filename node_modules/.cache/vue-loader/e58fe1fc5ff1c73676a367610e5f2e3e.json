{"remainingRequest":"C:\\Users\\18kar\\Desktop\\FE bugs\\shan\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\18kar\\Desktop\\FE bugs\\shan\\front_end\\src\\components\\AeComponent.vue?vue&type=template&id=6cb2129e&scoped=true&","dependencies":[{"path":"C:\\Users\\18kar\\Desktop\\FE bugs\\shan\\front_end\\src\\components\\AeComponent.vue","mtime":1634868176061},{"path":"C:\\Users\\18kar\\Desktop\\FE bugs\\shan\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\18kar\\Desktop\\FE bugs\\shan\\front_end\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\18kar\\Desktop\\FE bugs\\shan\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\18kar\\Desktop\\FE bugs\\shan\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}